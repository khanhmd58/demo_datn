node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 35
        }
      }
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 35
        }
      }
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Placeholder_1"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ones_like/Shape"
  op: "Shape"
  input: "strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ones_like"
  op: "Fill"
  input: "ones_like/Shape"
  input: "ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "ones_like"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Placeholder_1"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "mul"
  input: "strided_slice_1"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\034\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10540925711393356
      }
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10540925711393356
      }
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/enc_embed/lookup_table/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/enc_embed/lookup_table/Initializer/random_uniform/max"
  input: "encoder/enc_embed/lookup_table/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/enc_embed/lookup_table/Initializer/random_uniform/RandomUniform"
  input: "encoder/enc_embed/lookup_table/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table/Initializer/random_uniform"
  op: "Add"
  input: "encoder/enc_embed/lookup_table/Initializer/random_uniform/mul"
  input: "encoder/enc_embed/lookup_table/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table/Assign"
  op: "Assign"
  input: "encoder/enc_embed/lookup_table"
  input: "encoder/enc_embed/lookup_table/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/enc_embed/lookup_table/read"
  op: "Identity"
  input: "encoder/enc_embed/lookup_table"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/lookup_table"
      }
    }
  }
}
node {
  name: "encoder/enc_embed/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/enc_embed/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/enc_embed/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/enc_embed/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/enc_embed/strided_slice"
  op: "StridedSlice"
  input: "encoder/enc_embed/lookup_table/read"
  input: "encoder/enc_embed/strided_slice/stack"
  input: "encoder/enc_embed/strided_slice/stack_1"
  input: "encoder/enc_embed/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/enc_embed/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/enc_embed/concat"
  op: "ConcatV2"
  input: "encoder/enc_embed/zeros"
  input: "encoder/enc_embed/strided_slice"
  input: "encoder/enc_embed/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/enc_embed/embedding_lookup"
  op: "Gather"
  input: "encoder/enc_embed/concat"
  input: "Placeholder"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_embed/concat"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/enc_embed/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 22.627416610717773
      }
    }
  }
}
node {
  name: "encoder/enc_embed/mul"
  op: "Mul"
  input: "encoder/enc_embed/embedding_lookup"
  input: "encoder/enc_embed/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/Shape"
  op: "Shape"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/strided_slice"
  op: "StridedSlice"
  input: "encoder/Shape"
  input: "encoder/strided_slice/stack"
  input: "encoder/strided_slice/stack_1"
  input: "encoder/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/range"
  op: "Range"
  input: "encoder/range/start"
  input: "encoder/strided_slice"
  input: "encoder/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/ExpandDims"
  op: "ExpandDims"
  input: "encoder/range"
  input: "encoder/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/Shape_1"
  op: "Shape"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/strided_slice_1"
  op: "StridedSlice"
  input: "encoder/Shape_1"
  input: "encoder/strided_slice_1/stack"
  input: "encoder/strided_slice_1/stack_1"
  input: "encoder/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/Tile/multiples"
  op: "Pack"
  input: "encoder/strided_slice_1"
  input: "encoder/Tile/multiples/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/Tile"
  op: "Tile"
  input: "encoder/ExpandDims"
  input: "encoder/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10473261773586273
      }
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10473261773586273
      }
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/enc_pe/lookup_table/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/enc_pe/lookup_table/Initializer/random_uniform/max"
  input: "encoder/enc_pe/lookup_table/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/enc_pe/lookup_table/Initializer/random_uniform/RandomUniform"
  input: "encoder/enc_pe/lookup_table/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table/Initializer/random_uniform"
  op: "Add"
  input: "encoder/enc_pe/lookup_table/Initializer/random_uniform/mul"
  input: "encoder/enc_pe/lookup_table/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 35
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table/Assign"
  op: "Assign"
  input: "encoder/enc_pe/lookup_table"
  input: "encoder/enc_pe/lookup_table/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/enc_pe/lookup_table/read"
  op: "Identity"
  input: "encoder/enc_pe/lookup_table"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
}
node {
  name: "encoder/enc_pe/embedding_lookup"
  op: "Gather"
  input: "encoder/enc_pe/lookup_table/read"
  input: "encoder/Tile"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/enc_pe/lookup_table"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/add"
  op: "Add"
  input: "encoder/enc_embed/mul"
  input: "encoder/enc_pe/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "encoder/dropout/Identity"
  op: "Identity"
  input: "encoder/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/dense/bias"
  input: "encoder/num_blocks_0/multihead_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "encoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Cast"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Cast_1"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/mul"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/range/start"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Rank"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/range"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/ListDiff"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/add_1"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Prod"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/dropout/Identity"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/transpose"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_0/multihead_attention/dense/kernel/read"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/transpose_1"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/Const_2"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/MatMul"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_0/multihead_attention/dense/Tensordot"
  input: "encoder/num_blocks_0/multihead_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense/Relu"
  op: "Relu"
  input: "encoder/num_blocks_0/multihead_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/bias"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Cast"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Cast_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/range/start"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Rank"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/range"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/ListDiff"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/add_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Prod"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/dropout/Identity"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/transpose"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/kernel/read"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/transpose_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/Const_2"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/MatMul"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Tensordot"
  input: "encoder/num_blocks_0/multihead_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/Relu"
  op: "Relu"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/bias"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_2/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Cast"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Cast_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/mul"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/range/start"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Rank"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/range"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/ListDiff"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/add_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Prod"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/dropout/Identity"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/transpose"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/kernel/read"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/transpose_1"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/Const_2"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/MatMul"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Tensordot"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dense_3/Relu"
  op: "Relu"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/split"
  op: "Split"
  input: "encoder/num_blocks_0/multihead_attention/split/split_dim"
  input: "encoder/num_blocks_0/multihead_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/split"
  input: "encoder/num_blocks_0/multihead_attention/split:1"
  input: "encoder/num_blocks_0/multihead_attention/split:2"
  input: "encoder/num_blocks_0/multihead_attention/split:3"
  input: "encoder/num_blocks_0/multihead_attention/split:4"
  input: "encoder/num_blocks_0/multihead_attention/split:5"
  input: "encoder/num_blocks_0/multihead_attention/split:6"
  input: "encoder/num_blocks_0/multihead_attention/split:7"
  input: "encoder/num_blocks_0/multihead_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/split_1"
  op: "Split"
  input: "encoder/num_blocks_0/multihead_attention/split_1/split_dim"
  input: "encoder/num_blocks_0/multihead_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/split_1"
  input: "encoder/num_blocks_0/multihead_attention/split_1:1"
  input: "encoder/num_blocks_0/multihead_attention/split_1:2"
  input: "encoder/num_blocks_0/multihead_attention/split_1:3"
  input: "encoder/num_blocks_0/multihead_attention/split_1:4"
  input: "encoder/num_blocks_0/multihead_attention/split_1:5"
  input: "encoder/num_blocks_0/multihead_attention/split_1:6"
  input: "encoder/num_blocks_0/multihead_attention/split_1:7"
  input: "encoder/num_blocks_0/multihead_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/split_2"
  op: "Split"
  input: "encoder/num_blocks_0/multihead_attention/split_2/split_dim"
  input: "encoder/num_blocks_0/multihead_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/split_2"
  input: "encoder/num_blocks_0/multihead_attention/split_2:1"
  input: "encoder/num_blocks_0/multihead_attention/split_2:2"
  input: "encoder/num_blocks_0/multihead_attention/split_2:3"
  input: "encoder/num_blocks_0/multihead_attention/split_2:4"
  input: "encoder/num_blocks_0/multihead_attention/split_2:5"
  input: "encoder/num_blocks_0/multihead_attention/split_2:6"
  input: "encoder/num_blocks_0/multihead_attention/split_2:7"
  input: "encoder/num_blocks_0/multihead_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_0/multihead_attention/concat_1"
  input: "encoder/num_blocks_0/multihead_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/MatMul"
  op: "BatchMatMul"
  input: "encoder/num_blocks_0/multihead_attention/concat"
  input: "encoder/num_blocks_0/multihead_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_0/multihead_attention/MatMul"
  input: "encoder/num_blocks_0/multihead_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Sum"
  op: "Sum"
  input: "encoder/dropout/Identity"
  input: "encoder/num_blocks_0/multihead_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Abs"
  op: "Abs"
  input: "encoder/num_blocks_0/multihead_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Sign"
  op: "Sign"
  input: "encoder/num_blocks_0/multihead_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile"
  op: "Tile"
  input: "encoder/num_blocks_0/multihead_attention/Sign"
  input: "encoder/num_blocks_0/multihead_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_0/multihead_attention/Tile"
  input: "encoder/num_blocks_0/multihead_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Shape"
  op: "Shape"
  input: "encoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/strided_slice"
  op: "StridedSlice"
  input: "encoder/num_blocks_0/multihead_attention/Shape"
  input: "encoder/num_blocks_0/multihead_attention/strided_slice/stack"
  input: "encoder/num_blocks_0/multihead_attention/strided_slice/stack_1"
  input: "encoder/num_blocks_0/multihead_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_1/multiples"
  op: "Pack"
  input: "encoder/num_blocks_0/multihead_attention/Tile_1/multiples/0"
  input: "encoder/num_blocks_0/multihead_attention/strided_slice"
  input: "encoder/num_blocks_0/multihead_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_1"
  op: "Tile"
  input: "encoder/num_blocks_0/multihead_attention/ExpandDims"
  input: "encoder/num_blocks_0/multihead_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ones_like/Shape"
  op: "Shape"
  input: "encoder/num_blocks_0/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ones_like"
  op: "Fill"
  input: "encoder/num_blocks_0/multihead_attention/ones_like/Shape"
  input: "encoder/num_blocks_0/multihead_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/ones_like"
  input: "encoder/num_blocks_0/multihead_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Equal"
  op: "Equal"
  input: "encoder/num_blocks_0/multihead_attention/Tile_1"
  input: "encoder/num_blocks_0/multihead_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Select"
  op: "Select"
  input: "encoder/num_blocks_0/multihead_attention/Equal"
  input: "encoder/num_blocks_0/multihead_attention/mul"
  input: "encoder/num_blocks_0/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Shape_1"
  op: "Shape"
  input: "encoder/num_blocks_0/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Shape_2"
  op: "Shape"
  input: "encoder/num_blocks_0/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention/Rank"
  input: "encoder/num_blocks_0/multihead_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Slice/begin"
  op: "Pack"
  input: "encoder/num_blocks_0/multihead_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Slice"
  op: "Slice"
  input: "encoder/num_blocks_0/multihead_attention/Shape_2"
  input: "encoder/num_blocks_0/multihead_attention/Slice/begin"
  input: "encoder/num_blocks_0/multihead_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat_3"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/concat_3/values_0"
  input: "encoder/num_blocks_0/multihead_attention/Slice"
  input: "encoder/num_blocks_0/multihead_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/Select"
  input: "encoder/num_blocks_0/multihead_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Softmax"
  op: "Softmax"
  input: "encoder/num_blocks_0/multihead_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_0/multihead_attention/Softmax"
  input: "encoder/num_blocks_0/multihead_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Sum_1"
  op: "Sum"
  input: "encoder/dropout/Identity"
  input: "encoder/num_blocks_0/multihead_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Abs_1"
  op: "Abs"
  input: "encoder/num_blocks_0/multihead_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Sign_1"
  op: "Sign"
  input: "encoder/num_blocks_0/multihead_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_2"
  op: "Tile"
  input: "encoder/num_blocks_0/multihead_attention/Sign_1"
  input: "encoder/num_blocks_0/multihead_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_0/multihead_attention/Tile_2"
  input: "encoder/num_blocks_0/multihead_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Shape_3"
  op: "Shape"
  input: "encoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/strided_slice_1"
  op: "StridedSlice"
  input: "encoder/num_blocks_0/multihead_attention/Shape_3"
  input: "encoder/num_blocks_0/multihead_attention/strided_slice_1/stack"
  input: "encoder/num_blocks_0/multihead_attention/strided_slice_1/stack_1"
  input: "encoder/num_blocks_0/multihead_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_3/multiples"
  op: "Pack"
  input: "encoder/num_blocks_0/multihead_attention/Tile_3/multiples/0"
  input: "encoder/num_blocks_0/multihead_attention/Tile_3/multiples/1"
  input: "encoder/num_blocks_0/multihead_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Tile_3"
  op: "Tile"
  input: "encoder/num_blocks_0/multihead_attention/ExpandDims_1"
  input: "encoder/num_blocks_0/multihead_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/Reshape_1"
  input: "encoder/num_blocks_0/multihead_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/dropout/Identity"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/MatMul_1"
  op: "BatchMatMul"
  input: "encoder/num_blocks_0/multihead_attention/dropout/Identity"
  input: "encoder/num_blocks_0/multihead_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/split_3"
  op: "Split"
  input: "encoder/num_blocks_0/multihead_attention/split_3/split_dim"
  input: "encoder/num_blocks_0/multihead_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/concat_4"
  op: "ConcatV2"
  input: "encoder/num_blocks_0/multihead_attention/split_3"
  input: "encoder/num_blocks_0/multihead_attention/split_3:1"
  input: "encoder/num_blocks_0/multihead_attention/split_3:2"
  input: "encoder/num_blocks_0/multihead_attention/split_3:3"
  input: "encoder/num_blocks_0/multihead_attention/split_3:4"
  input: "encoder/num_blocks_0/multihead_attention/split_3:5"
  input: "encoder/num_blocks_0/multihead_attention/split_3:6"
  input: "encoder/num_blocks_0/multihead_attention/split_3:7"
  input: "encoder/num_blocks_0/multihead_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/add"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/concat_4"
  input: "encoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_0/multihead_attention/add"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention/add"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/Sub"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_0/multihead_attention/add"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/Mean_1"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/ln/Variable"
  input: "encoder/num_blocks_0/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/ln/Variable_1"
  input: "encoder/num_blocks_0/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention/add"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/add"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/ln/moments/variance"
  input: "encoder/num_blocks_0/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_0/multihead_attention/ln/add"
  input: "encoder/num_blocks_0/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_0/multihead_attention/ln/sub"
  input: "encoder/num_blocks_0/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/ln/Variable_1/read"
  input: "encoder/num_blocks_0/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/ln/mul"
  input: "encoder/num_blocks_0/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/bias"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_0/multihead_attention/ln/add_1"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/kernel/read"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/ExpandDims"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d/convolution/Squeeze"
  input: "encoder/num_blocks_0/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d/Relu"
  op: "Relu"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/bias"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d/Relu"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/kernel/read"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/convolution/Squeeze"
  input: "encoder/num_blocks_0/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/add"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention_1/conv1d_2/BiasAdd"
  input: "encoder/num_blocks_0/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_0/multihead_attention_1/add"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention_1/add"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Sub"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_0/multihead_attention_1/add"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Mean_1"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/shifted_mean"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/Variable"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention_1/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention_1/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/Variable_1"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention_1/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_0/multihead_attention_1/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_0/multihead_attention_1/add"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/add"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/moments/variance"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/sub"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/Variable_1/read"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/mul"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/dense/bias"
  input: "encoder/num_blocks_1/multihead_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Cast"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Cast_1"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/mul"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/range/start"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Rank"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/range"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/ListDiff"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/add_1"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Prod"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/transpose"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_1/multihead_attention/dense/kernel/read"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/transpose_1"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/Const_2"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/MatMul"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_1/multihead_attention/dense/Tensordot"
  input: "encoder/num_blocks_1/multihead_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense/Relu"
  op: "Relu"
  input: "encoder/num_blocks_1/multihead_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/bias"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Cast"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Cast_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/range/start"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Rank"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/range"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/ListDiff"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/add_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Prod"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/transpose"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/kernel/read"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/transpose_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/Const_2"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/MatMul"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Tensordot"
  input: "encoder/num_blocks_1/multihead_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/Relu"
  op: "Relu"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/bias"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_2/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Cast"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Cast_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/mul"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/range/start"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Rank"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/range"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/ListDiff"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/add_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Prod"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/transpose"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/kernel/read"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/transpose_1"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/Const_2"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/MatMul"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Tensordot"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dense_3/Relu"
  op: "Relu"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/split"
  op: "Split"
  input: "encoder/num_blocks_1/multihead_attention/split/split_dim"
  input: "encoder/num_blocks_1/multihead_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/split"
  input: "encoder/num_blocks_1/multihead_attention/split:1"
  input: "encoder/num_blocks_1/multihead_attention/split:2"
  input: "encoder/num_blocks_1/multihead_attention/split:3"
  input: "encoder/num_blocks_1/multihead_attention/split:4"
  input: "encoder/num_blocks_1/multihead_attention/split:5"
  input: "encoder/num_blocks_1/multihead_attention/split:6"
  input: "encoder/num_blocks_1/multihead_attention/split:7"
  input: "encoder/num_blocks_1/multihead_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/split_1"
  op: "Split"
  input: "encoder/num_blocks_1/multihead_attention/split_1/split_dim"
  input: "encoder/num_blocks_1/multihead_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/split_1"
  input: "encoder/num_blocks_1/multihead_attention/split_1:1"
  input: "encoder/num_blocks_1/multihead_attention/split_1:2"
  input: "encoder/num_blocks_1/multihead_attention/split_1:3"
  input: "encoder/num_blocks_1/multihead_attention/split_1:4"
  input: "encoder/num_blocks_1/multihead_attention/split_1:5"
  input: "encoder/num_blocks_1/multihead_attention/split_1:6"
  input: "encoder/num_blocks_1/multihead_attention/split_1:7"
  input: "encoder/num_blocks_1/multihead_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/split_2"
  op: "Split"
  input: "encoder/num_blocks_1/multihead_attention/split_2/split_dim"
  input: "encoder/num_blocks_1/multihead_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/split_2"
  input: "encoder/num_blocks_1/multihead_attention/split_2:1"
  input: "encoder/num_blocks_1/multihead_attention/split_2:2"
  input: "encoder/num_blocks_1/multihead_attention/split_2:3"
  input: "encoder/num_blocks_1/multihead_attention/split_2:4"
  input: "encoder/num_blocks_1/multihead_attention/split_2:5"
  input: "encoder/num_blocks_1/multihead_attention/split_2:6"
  input: "encoder/num_blocks_1/multihead_attention/split_2:7"
  input: "encoder/num_blocks_1/multihead_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_1/multihead_attention/concat_1"
  input: "encoder/num_blocks_1/multihead_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/MatMul"
  op: "BatchMatMul"
  input: "encoder/num_blocks_1/multihead_attention/concat"
  input: "encoder/num_blocks_1/multihead_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_1/multihead_attention/MatMul"
  input: "encoder/num_blocks_1/multihead_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_1/multihead_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Abs"
  op: "Abs"
  input: "encoder/num_blocks_1/multihead_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Sign"
  op: "Sign"
  input: "encoder/num_blocks_1/multihead_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile"
  op: "Tile"
  input: "encoder/num_blocks_1/multihead_attention/Sign"
  input: "encoder/num_blocks_1/multihead_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_1/multihead_attention/Tile"
  input: "encoder/num_blocks_1/multihead_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Shape"
  op: "Shape"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/strided_slice"
  op: "StridedSlice"
  input: "encoder/num_blocks_1/multihead_attention/Shape"
  input: "encoder/num_blocks_1/multihead_attention/strided_slice/stack"
  input: "encoder/num_blocks_1/multihead_attention/strided_slice/stack_1"
  input: "encoder/num_blocks_1/multihead_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_1/multiples"
  op: "Pack"
  input: "encoder/num_blocks_1/multihead_attention/Tile_1/multiples/0"
  input: "encoder/num_blocks_1/multihead_attention/strided_slice"
  input: "encoder/num_blocks_1/multihead_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_1"
  op: "Tile"
  input: "encoder/num_blocks_1/multihead_attention/ExpandDims"
  input: "encoder/num_blocks_1/multihead_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ones_like/Shape"
  op: "Shape"
  input: "encoder/num_blocks_1/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ones_like"
  op: "Fill"
  input: "encoder/num_blocks_1/multihead_attention/ones_like/Shape"
  input: "encoder/num_blocks_1/multihead_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/ones_like"
  input: "encoder/num_blocks_1/multihead_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Equal"
  op: "Equal"
  input: "encoder/num_blocks_1/multihead_attention/Tile_1"
  input: "encoder/num_blocks_1/multihead_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Select"
  op: "Select"
  input: "encoder/num_blocks_1/multihead_attention/Equal"
  input: "encoder/num_blocks_1/multihead_attention/mul"
  input: "encoder/num_blocks_1/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Shape_1"
  op: "Shape"
  input: "encoder/num_blocks_1/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Shape_2"
  op: "Shape"
  input: "encoder/num_blocks_1/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention/Rank"
  input: "encoder/num_blocks_1/multihead_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Slice/begin"
  op: "Pack"
  input: "encoder/num_blocks_1/multihead_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Slice"
  op: "Slice"
  input: "encoder/num_blocks_1/multihead_attention/Shape_2"
  input: "encoder/num_blocks_1/multihead_attention/Slice/begin"
  input: "encoder/num_blocks_1/multihead_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat_3"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/concat_3/values_0"
  input: "encoder/num_blocks_1/multihead_attention/Slice"
  input: "encoder/num_blocks_1/multihead_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/Select"
  input: "encoder/num_blocks_1/multihead_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Softmax"
  op: "Softmax"
  input: "encoder/num_blocks_1/multihead_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_1/multihead_attention/Softmax"
  input: "encoder/num_blocks_1/multihead_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Sum_1"
  op: "Sum"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_1/multihead_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Abs_1"
  op: "Abs"
  input: "encoder/num_blocks_1/multihead_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Sign_1"
  op: "Sign"
  input: "encoder/num_blocks_1/multihead_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_2"
  op: "Tile"
  input: "encoder/num_blocks_1/multihead_attention/Sign_1"
  input: "encoder/num_blocks_1/multihead_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_1/multihead_attention/Tile_2"
  input: "encoder/num_blocks_1/multihead_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/strided_slice_1"
  op: "StridedSlice"
  input: "encoder/num_blocks_1/multihead_attention/Shape_3"
  input: "encoder/num_blocks_1/multihead_attention/strided_slice_1/stack"
  input: "encoder/num_blocks_1/multihead_attention/strided_slice_1/stack_1"
  input: "encoder/num_blocks_1/multihead_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_3/multiples"
  op: "Pack"
  input: "encoder/num_blocks_1/multihead_attention/Tile_3/multiples/0"
  input: "encoder/num_blocks_1/multihead_attention/Tile_3/multiples/1"
  input: "encoder/num_blocks_1/multihead_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Tile_3"
  op: "Tile"
  input: "encoder/num_blocks_1/multihead_attention/ExpandDims_1"
  input: "encoder/num_blocks_1/multihead_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/Reshape_1"
  input: "encoder/num_blocks_1/multihead_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/dropout/Identity"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/MatMul_1"
  op: "BatchMatMul"
  input: "encoder/num_blocks_1/multihead_attention/dropout/Identity"
  input: "encoder/num_blocks_1/multihead_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/split_3"
  op: "Split"
  input: "encoder/num_blocks_1/multihead_attention/split_3/split_dim"
  input: "encoder/num_blocks_1/multihead_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/concat_4"
  op: "ConcatV2"
  input: "encoder/num_blocks_1/multihead_attention/split_3"
  input: "encoder/num_blocks_1/multihead_attention/split_3:1"
  input: "encoder/num_blocks_1/multihead_attention/split_3:2"
  input: "encoder/num_blocks_1/multihead_attention/split_3:3"
  input: "encoder/num_blocks_1/multihead_attention/split_3:4"
  input: "encoder/num_blocks_1/multihead_attention/split_3:5"
  input: "encoder/num_blocks_1/multihead_attention/split_3:6"
  input: "encoder/num_blocks_1/multihead_attention/split_3:7"
  input: "encoder/num_blocks_1/multihead_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/add"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/concat_4"
  input: "encoder/num_blocks_0/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_1/multihead_attention/add"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention/add"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/Sub"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_1/multihead_attention/add"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/Mean_1"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/ln/Variable"
  input: "encoder/num_blocks_1/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/ln/Variable_1"
  input: "encoder/num_blocks_1/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention/add"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/add"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/ln/moments/variance"
  input: "encoder/num_blocks_1/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_1/multihead_attention/ln/add"
  input: "encoder/num_blocks_1/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_1/multihead_attention/ln/sub"
  input: "encoder/num_blocks_1/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/ln/Variable_1/read"
  input: "encoder/num_blocks_1/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/ln/mul"
  input: "encoder/num_blocks_1/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/bias"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_1/multihead_attention/ln/add_1"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/kernel/read"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/ExpandDims"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d/convolution/Squeeze"
  input: "encoder/num_blocks_1/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d/Relu"
  op: "Relu"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/bias"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d/Relu"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/kernel/read"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/convolution/Squeeze"
  input: "encoder/num_blocks_1/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/add"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention_1/conv1d_2/BiasAdd"
  input: "encoder/num_blocks_1/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_1/multihead_attention_1/add"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention_1/add"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Sub"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_1/multihead_attention_1/add"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Mean_1"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/shifted_mean"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/Variable"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention_1/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention_1/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/Variable_1"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention_1/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_1/multihead_attention_1/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_1/multihead_attention_1/add"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/add"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/moments/variance"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/sub"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/Variable_1/read"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/mul"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/dense/bias"
  input: "encoder/num_blocks_2/multihead_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Cast"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Cast_1"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/mul"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/range/start"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Rank"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/range"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/ListDiff"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/add_1"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Prod"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/transpose"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_2/multihead_attention/dense/kernel/read"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/transpose_1"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/Const_2"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/MatMul"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_2/multihead_attention/dense/Tensordot"
  input: "encoder/num_blocks_2/multihead_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense/Relu"
  op: "Relu"
  input: "encoder/num_blocks_2/multihead_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/bias"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Cast"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Cast_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/range/start"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Rank"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/range"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/ListDiff"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/add_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Prod"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/transpose"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/kernel/read"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/transpose_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/Const_2"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/MatMul"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Tensordot"
  input: "encoder/num_blocks_2/multihead_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/Relu"
  op: "Relu"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/bias"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_2/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Cast"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Cast_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/mul"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/range/start"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Rank"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/range"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/ListDiff"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/add_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Prod"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/transpose"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/kernel/read"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/transpose_1"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/Const_2"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/MatMul"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Tensordot"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dense_3/Relu"
  op: "Relu"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/split"
  op: "Split"
  input: "encoder/num_blocks_2/multihead_attention/split/split_dim"
  input: "encoder/num_blocks_2/multihead_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/split"
  input: "encoder/num_blocks_2/multihead_attention/split:1"
  input: "encoder/num_blocks_2/multihead_attention/split:2"
  input: "encoder/num_blocks_2/multihead_attention/split:3"
  input: "encoder/num_blocks_2/multihead_attention/split:4"
  input: "encoder/num_blocks_2/multihead_attention/split:5"
  input: "encoder/num_blocks_2/multihead_attention/split:6"
  input: "encoder/num_blocks_2/multihead_attention/split:7"
  input: "encoder/num_blocks_2/multihead_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/split_1"
  op: "Split"
  input: "encoder/num_blocks_2/multihead_attention/split_1/split_dim"
  input: "encoder/num_blocks_2/multihead_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/split_1"
  input: "encoder/num_blocks_2/multihead_attention/split_1:1"
  input: "encoder/num_blocks_2/multihead_attention/split_1:2"
  input: "encoder/num_blocks_2/multihead_attention/split_1:3"
  input: "encoder/num_blocks_2/multihead_attention/split_1:4"
  input: "encoder/num_blocks_2/multihead_attention/split_1:5"
  input: "encoder/num_blocks_2/multihead_attention/split_1:6"
  input: "encoder/num_blocks_2/multihead_attention/split_1:7"
  input: "encoder/num_blocks_2/multihead_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/split_2"
  op: "Split"
  input: "encoder/num_blocks_2/multihead_attention/split_2/split_dim"
  input: "encoder/num_blocks_2/multihead_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/split_2"
  input: "encoder/num_blocks_2/multihead_attention/split_2:1"
  input: "encoder/num_blocks_2/multihead_attention/split_2:2"
  input: "encoder/num_blocks_2/multihead_attention/split_2:3"
  input: "encoder/num_blocks_2/multihead_attention/split_2:4"
  input: "encoder/num_blocks_2/multihead_attention/split_2:5"
  input: "encoder/num_blocks_2/multihead_attention/split_2:6"
  input: "encoder/num_blocks_2/multihead_attention/split_2:7"
  input: "encoder/num_blocks_2/multihead_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_2/multihead_attention/concat_1"
  input: "encoder/num_blocks_2/multihead_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/MatMul"
  op: "BatchMatMul"
  input: "encoder/num_blocks_2/multihead_attention/concat"
  input: "encoder/num_blocks_2/multihead_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_2/multihead_attention/MatMul"
  input: "encoder/num_blocks_2/multihead_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_2/multihead_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Abs"
  op: "Abs"
  input: "encoder/num_blocks_2/multihead_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Sign"
  op: "Sign"
  input: "encoder/num_blocks_2/multihead_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile"
  op: "Tile"
  input: "encoder/num_blocks_2/multihead_attention/Sign"
  input: "encoder/num_blocks_2/multihead_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_2/multihead_attention/Tile"
  input: "encoder/num_blocks_2/multihead_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Shape"
  op: "Shape"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/strided_slice"
  op: "StridedSlice"
  input: "encoder/num_blocks_2/multihead_attention/Shape"
  input: "encoder/num_blocks_2/multihead_attention/strided_slice/stack"
  input: "encoder/num_blocks_2/multihead_attention/strided_slice/stack_1"
  input: "encoder/num_blocks_2/multihead_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_1/multiples"
  op: "Pack"
  input: "encoder/num_blocks_2/multihead_attention/Tile_1/multiples/0"
  input: "encoder/num_blocks_2/multihead_attention/strided_slice"
  input: "encoder/num_blocks_2/multihead_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_1"
  op: "Tile"
  input: "encoder/num_blocks_2/multihead_attention/ExpandDims"
  input: "encoder/num_blocks_2/multihead_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ones_like/Shape"
  op: "Shape"
  input: "encoder/num_blocks_2/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ones_like"
  op: "Fill"
  input: "encoder/num_blocks_2/multihead_attention/ones_like/Shape"
  input: "encoder/num_blocks_2/multihead_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/ones_like"
  input: "encoder/num_blocks_2/multihead_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Equal"
  op: "Equal"
  input: "encoder/num_blocks_2/multihead_attention/Tile_1"
  input: "encoder/num_blocks_2/multihead_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Select"
  op: "Select"
  input: "encoder/num_blocks_2/multihead_attention/Equal"
  input: "encoder/num_blocks_2/multihead_attention/mul"
  input: "encoder/num_blocks_2/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Shape_1"
  op: "Shape"
  input: "encoder/num_blocks_2/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Shape_2"
  op: "Shape"
  input: "encoder/num_blocks_2/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention/Rank"
  input: "encoder/num_blocks_2/multihead_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Slice/begin"
  op: "Pack"
  input: "encoder/num_blocks_2/multihead_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Slice"
  op: "Slice"
  input: "encoder/num_blocks_2/multihead_attention/Shape_2"
  input: "encoder/num_blocks_2/multihead_attention/Slice/begin"
  input: "encoder/num_blocks_2/multihead_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat_3"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/concat_3/values_0"
  input: "encoder/num_blocks_2/multihead_attention/Slice"
  input: "encoder/num_blocks_2/multihead_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/Select"
  input: "encoder/num_blocks_2/multihead_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Softmax"
  op: "Softmax"
  input: "encoder/num_blocks_2/multihead_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_2/multihead_attention/Softmax"
  input: "encoder/num_blocks_2/multihead_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Sum_1"
  op: "Sum"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_2/multihead_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Abs_1"
  op: "Abs"
  input: "encoder/num_blocks_2/multihead_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Sign_1"
  op: "Sign"
  input: "encoder/num_blocks_2/multihead_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_2"
  op: "Tile"
  input: "encoder/num_blocks_2/multihead_attention/Sign_1"
  input: "encoder/num_blocks_2/multihead_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_2/multihead_attention/Tile_2"
  input: "encoder/num_blocks_2/multihead_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/strided_slice_1"
  op: "StridedSlice"
  input: "encoder/num_blocks_2/multihead_attention/Shape_3"
  input: "encoder/num_blocks_2/multihead_attention/strided_slice_1/stack"
  input: "encoder/num_blocks_2/multihead_attention/strided_slice_1/stack_1"
  input: "encoder/num_blocks_2/multihead_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_3/multiples"
  op: "Pack"
  input: "encoder/num_blocks_2/multihead_attention/Tile_3/multiples/0"
  input: "encoder/num_blocks_2/multihead_attention/Tile_3/multiples/1"
  input: "encoder/num_blocks_2/multihead_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Tile_3"
  op: "Tile"
  input: "encoder/num_blocks_2/multihead_attention/ExpandDims_1"
  input: "encoder/num_blocks_2/multihead_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/Reshape_1"
  input: "encoder/num_blocks_2/multihead_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/dropout/Identity"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/MatMul_1"
  op: "BatchMatMul"
  input: "encoder/num_blocks_2/multihead_attention/dropout/Identity"
  input: "encoder/num_blocks_2/multihead_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/split_3"
  op: "Split"
  input: "encoder/num_blocks_2/multihead_attention/split_3/split_dim"
  input: "encoder/num_blocks_2/multihead_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/concat_4"
  op: "ConcatV2"
  input: "encoder/num_blocks_2/multihead_attention/split_3"
  input: "encoder/num_blocks_2/multihead_attention/split_3:1"
  input: "encoder/num_blocks_2/multihead_attention/split_3:2"
  input: "encoder/num_blocks_2/multihead_attention/split_3:3"
  input: "encoder/num_blocks_2/multihead_attention/split_3:4"
  input: "encoder/num_blocks_2/multihead_attention/split_3:5"
  input: "encoder/num_blocks_2/multihead_attention/split_3:6"
  input: "encoder/num_blocks_2/multihead_attention/split_3:7"
  input: "encoder/num_blocks_2/multihead_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/add"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/concat_4"
  input: "encoder/num_blocks_1/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_2/multihead_attention/add"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention/add"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/Sub"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_2/multihead_attention/add"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/Mean_1"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/ln/Variable"
  input: "encoder/num_blocks_2/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/ln/Variable_1"
  input: "encoder/num_blocks_2/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention/add"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/add"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/ln/moments/variance"
  input: "encoder/num_blocks_2/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_2/multihead_attention/ln/add"
  input: "encoder/num_blocks_2/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_2/multihead_attention/ln/sub"
  input: "encoder/num_blocks_2/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/ln/Variable_1/read"
  input: "encoder/num_blocks_2/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/ln/mul"
  input: "encoder/num_blocks_2/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/bias"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_2/multihead_attention/ln/add_1"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/kernel/read"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/ExpandDims"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d/convolution/Squeeze"
  input: "encoder/num_blocks_2/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d/Relu"
  op: "Relu"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/bias"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d/Relu"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/kernel/read"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/convolution/Squeeze"
  input: "encoder/num_blocks_2/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/add"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention_1/conv1d_2/BiasAdd"
  input: "encoder/num_blocks_2/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_2/multihead_attention_1/add"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention_1/add"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Sub"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_2/multihead_attention_1/add"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Mean_1"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/shifted_mean"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/Variable"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention_1/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention_1/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/Variable_1"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention_1/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_2/multihead_attention_1/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_2/multihead_attention_1/add"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/add"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/moments/variance"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/sub"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/Variable_1/read"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/mul"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/dense/bias"
  input: "encoder/num_blocks_3/multihead_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Cast"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Cast_1"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/mul"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/range/start"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Rank"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/range"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/ListDiff"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/add_1"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Prod"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/transpose"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_3/multihead_attention/dense/kernel/read"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/transpose_1"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/Const_2"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/MatMul"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_3/multihead_attention/dense/Tensordot"
  input: "encoder/num_blocks_3/multihead_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense/Relu"
  op: "Relu"
  input: "encoder/num_blocks_3/multihead_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/bias"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Cast"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Cast_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/range/start"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Rank"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/range"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/ListDiff"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/add_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Prod"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/transpose"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/kernel/read"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/transpose_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/Const_2"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/MatMul"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Tensordot"
  input: "encoder/num_blocks_3/multihead_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/Relu"
  op: "Relu"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/bias"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_2/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Cast"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Cast_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/mul"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/range/start"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Rank"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/range"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/ListDiff"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/add_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Prod"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/transpose"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/kernel/read"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/transpose_1"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/Const_2"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/MatMul"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Tensordot"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dense_3/Relu"
  op: "Relu"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/split"
  op: "Split"
  input: "encoder/num_blocks_3/multihead_attention/split/split_dim"
  input: "encoder/num_blocks_3/multihead_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/split"
  input: "encoder/num_blocks_3/multihead_attention/split:1"
  input: "encoder/num_blocks_3/multihead_attention/split:2"
  input: "encoder/num_blocks_3/multihead_attention/split:3"
  input: "encoder/num_blocks_3/multihead_attention/split:4"
  input: "encoder/num_blocks_3/multihead_attention/split:5"
  input: "encoder/num_blocks_3/multihead_attention/split:6"
  input: "encoder/num_blocks_3/multihead_attention/split:7"
  input: "encoder/num_blocks_3/multihead_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/split_1"
  op: "Split"
  input: "encoder/num_blocks_3/multihead_attention/split_1/split_dim"
  input: "encoder/num_blocks_3/multihead_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/split_1"
  input: "encoder/num_blocks_3/multihead_attention/split_1:1"
  input: "encoder/num_blocks_3/multihead_attention/split_1:2"
  input: "encoder/num_blocks_3/multihead_attention/split_1:3"
  input: "encoder/num_blocks_3/multihead_attention/split_1:4"
  input: "encoder/num_blocks_3/multihead_attention/split_1:5"
  input: "encoder/num_blocks_3/multihead_attention/split_1:6"
  input: "encoder/num_blocks_3/multihead_attention/split_1:7"
  input: "encoder/num_blocks_3/multihead_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/split_2"
  op: "Split"
  input: "encoder/num_blocks_3/multihead_attention/split_2/split_dim"
  input: "encoder/num_blocks_3/multihead_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/split_2"
  input: "encoder/num_blocks_3/multihead_attention/split_2:1"
  input: "encoder/num_blocks_3/multihead_attention/split_2:2"
  input: "encoder/num_blocks_3/multihead_attention/split_2:3"
  input: "encoder/num_blocks_3/multihead_attention/split_2:4"
  input: "encoder/num_blocks_3/multihead_attention/split_2:5"
  input: "encoder/num_blocks_3/multihead_attention/split_2:6"
  input: "encoder/num_blocks_3/multihead_attention/split_2:7"
  input: "encoder/num_blocks_3/multihead_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_3/multihead_attention/concat_1"
  input: "encoder/num_blocks_3/multihead_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/MatMul"
  op: "BatchMatMul"
  input: "encoder/num_blocks_3/multihead_attention/concat"
  input: "encoder/num_blocks_3/multihead_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_3/multihead_attention/MatMul"
  input: "encoder/num_blocks_3/multihead_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_3/multihead_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Abs"
  op: "Abs"
  input: "encoder/num_blocks_3/multihead_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Sign"
  op: "Sign"
  input: "encoder/num_blocks_3/multihead_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile"
  op: "Tile"
  input: "encoder/num_blocks_3/multihead_attention/Sign"
  input: "encoder/num_blocks_3/multihead_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_3/multihead_attention/Tile"
  input: "encoder/num_blocks_3/multihead_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Shape"
  op: "Shape"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/strided_slice"
  op: "StridedSlice"
  input: "encoder/num_blocks_3/multihead_attention/Shape"
  input: "encoder/num_blocks_3/multihead_attention/strided_slice/stack"
  input: "encoder/num_blocks_3/multihead_attention/strided_slice/stack_1"
  input: "encoder/num_blocks_3/multihead_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_1/multiples"
  op: "Pack"
  input: "encoder/num_blocks_3/multihead_attention/Tile_1/multiples/0"
  input: "encoder/num_blocks_3/multihead_attention/strided_slice"
  input: "encoder/num_blocks_3/multihead_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_1"
  op: "Tile"
  input: "encoder/num_blocks_3/multihead_attention/ExpandDims"
  input: "encoder/num_blocks_3/multihead_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ones_like/Shape"
  op: "Shape"
  input: "encoder/num_blocks_3/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ones_like"
  op: "Fill"
  input: "encoder/num_blocks_3/multihead_attention/ones_like/Shape"
  input: "encoder/num_blocks_3/multihead_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/ones_like"
  input: "encoder/num_blocks_3/multihead_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Equal"
  op: "Equal"
  input: "encoder/num_blocks_3/multihead_attention/Tile_1"
  input: "encoder/num_blocks_3/multihead_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Select"
  op: "Select"
  input: "encoder/num_blocks_3/multihead_attention/Equal"
  input: "encoder/num_blocks_3/multihead_attention/mul"
  input: "encoder/num_blocks_3/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Shape_1"
  op: "Shape"
  input: "encoder/num_blocks_3/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Shape_2"
  op: "Shape"
  input: "encoder/num_blocks_3/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention/Rank"
  input: "encoder/num_blocks_3/multihead_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Slice/begin"
  op: "Pack"
  input: "encoder/num_blocks_3/multihead_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Slice"
  op: "Slice"
  input: "encoder/num_blocks_3/multihead_attention/Shape_2"
  input: "encoder/num_blocks_3/multihead_attention/Slice/begin"
  input: "encoder/num_blocks_3/multihead_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat_3"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/concat_3/values_0"
  input: "encoder/num_blocks_3/multihead_attention/Slice"
  input: "encoder/num_blocks_3/multihead_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/Select"
  input: "encoder/num_blocks_3/multihead_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Softmax"
  op: "Softmax"
  input: "encoder/num_blocks_3/multihead_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_3/multihead_attention/Softmax"
  input: "encoder/num_blocks_3/multihead_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Sum_1"
  op: "Sum"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_3/multihead_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Abs_1"
  op: "Abs"
  input: "encoder/num_blocks_3/multihead_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Sign_1"
  op: "Sign"
  input: "encoder/num_blocks_3/multihead_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_2"
  op: "Tile"
  input: "encoder/num_blocks_3/multihead_attention/Sign_1"
  input: "encoder/num_blocks_3/multihead_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_3/multihead_attention/Tile_2"
  input: "encoder/num_blocks_3/multihead_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/strided_slice_1"
  op: "StridedSlice"
  input: "encoder/num_blocks_3/multihead_attention/Shape_3"
  input: "encoder/num_blocks_3/multihead_attention/strided_slice_1/stack"
  input: "encoder/num_blocks_3/multihead_attention/strided_slice_1/stack_1"
  input: "encoder/num_blocks_3/multihead_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_3/multiples"
  op: "Pack"
  input: "encoder/num_blocks_3/multihead_attention/Tile_3/multiples/0"
  input: "encoder/num_blocks_3/multihead_attention/Tile_3/multiples/1"
  input: "encoder/num_blocks_3/multihead_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Tile_3"
  op: "Tile"
  input: "encoder/num_blocks_3/multihead_attention/ExpandDims_1"
  input: "encoder/num_blocks_3/multihead_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/Reshape_1"
  input: "encoder/num_blocks_3/multihead_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/dropout/Identity"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/MatMul_1"
  op: "BatchMatMul"
  input: "encoder/num_blocks_3/multihead_attention/dropout/Identity"
  input: "encoder/num_blocks_3/multihead_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/split_3"
  op: "Split"
  input: "encoder/num_blocks_3/multihead_attention/split_3/split_dim"
  input: "encoder/num_blocks_3/multihead_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/concat_4"
  op: "ConcatV2"
  input: "encoder/num_blocks_3/multihead_attention/split_3"
  input: "encoder/num_blocks_3/multihead_attention/split_3:1"
  input: "encoder/num_blocks_3/multihead_attention/split_3:2"
  input: "encoder/num_blocks_3/multihead_attention/split_3:3"
  input: "encoder/num_blocks_3/multihead_attention/split_3:4"
  input: "encoder/num_blocks_3/multihead_attention/split_3:5"
  input: "encoder/num_blocks_3/multihead_attention/split_3:6"
  input: "encoder/num_blocks_3/multihead_attention/split_3:7"
  input: "encoder/num_blocks_3/multihead_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/add"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/concat_4"
  input: "encoder/num_blocks_2/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_3/multihead_attention/add"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention/add"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/Sub"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_3/multihead_attention/add"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/Mean_1"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/ln/Variable"
  input: "encoder/num_blocks_3/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/ln/Variable_1"
  input: "encoder/num_blocks_3/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention/add"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/add"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/ln/moments/variance"
  input: "encoder/num_blocks_3/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_3/multihead_attention/ln/add"
  input: "encoder/num_blocks_3/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_3/multihead_attention/ln/sub"
  input: "encoder/num_blocks_3/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/ln/Variable_1/read"
  input: "encoder/num_blocks_3/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/ln/mul"
  input: "encoder/num_blocks_3/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/bias"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_3/multihead_attention/ln/add_1"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/kernel/read"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/ExpandDims"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d/convolution/Squeeze"
  input: "encoder/num_blocks_3/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d/Relu"
  op: "Relu"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/bias"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d/Relu"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/kernel/read"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/convolution/Squeeze"
  input: "encoder/num_blocks_3/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/add"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention_1/conv1d_2/BiasAdd"
  input: "encoder/num_blocks_3/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_3/multihead_attention_1/add"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention_1/add"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Sub"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_3/multihead_attention_1/add"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Mean_1"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/shifted_mean"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/Variable"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention_1/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention_1/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/Variable_1"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention_1/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_3/multihead_attention_1/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_3/multihead_attention_1/add"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/add"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/moments/variance"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/sub"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/Variable_1/read"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/mul"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/dense/bias"
  input: "encoder/num_blocks_4/multihead_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Cast"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Cast_1"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/mul"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/range/start"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Rank"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/range"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/ListDiff"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/add_1"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Prod"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/transpose"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_4/multihead_attention/dense/kernel/read"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/transpose_1"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/Const_2"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/MatMul"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_4/multihead_attention/dense/Tensordot"
  input: "encoder/num_blocks_4/multihead_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense/Relu"
  op: "Relu"
  input: "encoder/num_blocks_4/multihead_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/bias"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Cast"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Cast_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/range/start"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Rank"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/range"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/ListDiff"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/add_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Prod"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/transpose"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/kernel/read"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/transpose_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/Const_2"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/MatMul"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Tensordot"
  input: "encoder/num_blocks_4/multihead_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/Relu"
  op: "Relu"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/bias"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_2/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Cast"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Cast_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/mul"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/range/start"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Rank"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/range"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/ListDiff"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/add_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Prod"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/transpose"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/kernel/read"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/transpose_1"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/Const_2"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/MatMul"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Tensordot"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dense_3/Relu"
  op: "Relu"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/split"
  op: "Split"
  input: "encoder/num_blocks_4/multihead_attention/split/split_dim"
  input: "encoder/num_blocks_4/multihead_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/split"
  input: "encoder/num_blocks_4/multihead_attention/split:1"
  input: "encoder/num_blocks_4/multihead_attention/split:2"
  input: "encoder/num_blocks_4/multihead_attention/split:3"
  input: "encoder/num_blocks_4/multihead_attention/split:4"
  input: "encoder/num_blocks_4/multihead_attention/split:5"
  input: "encoder/num_blocks_4/multihead_attention/split:6"
  input: "encoder/num_blocks_4/multihead_attention/split:7"
  input: "encoder/num_blocks_4/multihead_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/split_1"
  op: "Split"
  input: "encoder/num_blocks_4/multihead_attention/split_1/split_dim"
  input: "encoder/num_blocks_4/multihead_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/split_1"
  input: "encoder/num_blocks_4/multihead_attention/split_1:1"
  input: "encoder/num_blocks_4/multihead_attention/split_1:2"
  input: "encoder/num_blocks_4/multihead_attention/split_1:3"
  input: "encoder/num_blocks_4/multihead_attention/split_1:4"
  input: "encoder/num_blocks_4/multihead_attention/split_1:5"
  input: "encoder/num_blocks_4/multihead_attention/split_1:6"
  input: "encoder/num_blocks_4/multihead_attention/split_1:7"
  input: "encoder/num_blocks_4/multihead_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/split_2"
  op: "Split"
  input: "encoder/num_blocks_4/multihead_attention/split_2/split_dim"
  input: "encoder/num_blocks_4/multihead_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/split_2"
  input: "encoder/num_blocks_4/multihead_attention/split_2:1"
  input: "encoder/num_blocks_4/multihead_attention/split_2:2"
  input: "encoder/num_blocks_4/multihead_attention/split_2:3"
  input: "encoder/num_blocks_4/multihead_attention/split_2:4"
  input: "encoder/num_blocks_4/multihead_attention/split_2:5"
  input: "encoder/num_blocks_4/multihead_attention/split_2:6"
  input: "encoder/num_blocks_4/multihead_attention/split_2:7"
  input: "encoder/num_blocks_4/multihead_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_4/multihead_attention/concat_1"
  input: "encoder/num_blocks_4/multihead_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/MatMul"
  op: "BatchMatMul"
  input: "encoder/num_blocks_4/multihead_attention/concat"
  input: "encoder/num_blocks_4/multihead_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_4/multihead_attention/MatMul"
  input: "encoder/num_blocks_4/multihead_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_4/multihead_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Abs"
  op: "Abs"
  input: "encoder/num_blocks_4/multihead_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Sign"
  op: "Sign"
  input: "encoder/num_blocks_4/multihead_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile"
  op: "Tile"
  input: "encoder/num_blocks_4/multihead_attention/Sign"
  input: "encoder/num_blocks_4/multihead_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_4/multihead_attention/Tile"
  input: "encoder/num_blocks_4/multihead_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Shape"
  op: "Shape"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/strided_slice"
  op: "StridedSlice"
  input: "encoder/num_blocks_4/multihead_attention/Shape"
  input: "encoder/num_blocks_4/multihead_attention/strided_slice/stack"
  input: "encoder/num_blocks_4/multihead_attention/strided_slice/stack_1"
  input: "encoder/num_blocks_4/multihead_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_1/multiples"
  op: "Pack"
  input: "encoder/num_blocks_4/multihead_attention/Tile_1/multiples/0"
  input: "encoder/num_blocks_4/multihead_attention/strided_slice"
  input: "encoder/num_blocks_4/multihead_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_1"
  op: "Tile"
  input: "encoder/num_blocks_4/multihead_attention/ExpandDims"
  input: "encoder/num_blocks_4/multihead_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ones_like/Shape"
  op: "Shape"
  input: "encoder/num_blocks_4/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ones_like"
  op: "Fill"
  input: "encoder/num_blocks_4/multihead_attention/ones_like/Shape"
  input: "encoder/num_blocks_4/multihead_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/ones_like"
  input: "encoder/num_blocks_4/multihead_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Equal"
  op: "Equal"
  input: "encoder/num_blocks_4/multihead_attention/Tile_1"
  input: "encoder/num_blocks_4/multihead_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Select"
  op: "Select"
  input: "encoder/num_blocks_4/multihead_attention/Equal"
  input: "encoder/num_blocks_4/multihead_attention/mul"
  input: "encoder/num_blocks_4/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Shape_1"
  op: "Shape"
  input: "encoder/num_blocks_4/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Shape_2"
  op: "Shape"
  input: "encoder/num_blocks_4/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention/Rank"
  input: "encoder/num_blocks_4/multihead_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Slice/begin"
  op: "Pack"
  input: "encoder/num_blocks_4/multihead_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Slice"
  op: "Slice"
  input: "encoder/num_blocks_4/multihead_attention/Shape_2"
  input: "encoder/num_blocks_4/multihead_attention/Slice/begin"
  input: "encoder/num_blocks_4/multihead_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat_3"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/concat_3/values_0"
  input: "encoder/num_blocks_4/multihead_attention/Slice"
  input: "encoder/num_blocks_4/multihead_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/Select"
  input: "encoder/num_blocks_4/multihead_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Softmax"
  op: "Softmax"
  input: "encoder/num_blocks_4/multihead_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_4/multihead_attention/Softmax"
  input: "encoder/num_blocks_4/multihead_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Sum_1"
  op: "Sum"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_4/multihead_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Abs_1"
  op: "Abs"
  input: "encoder/num_blocks_4/multihead_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Sign_1"
  op: "Sign"
  input: "encoder/num_blocks_4/multihead_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_2"
  op: "Tile"
  input: "encoder/num_blocks_4/multihead_attention/Sign_1"
  input: "encoder/num_blocks_4/multihead_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_4/multihead_attention/Tile_2"
  input: "encoder/num_blocks_4/multihead_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/strided_slice_1"
  op: "StridedSlice"
  input: "encoder/num_blocks_4/multihead_attention/Shape_3"
  input: "encoder/num_blocks_4/multihead_attention/strided_slice_1/stack"
  input: "encoder/num_blocks_4/multihead_attention/strided_slice_1/stack_1"
  input: "encoder/num_blocks_4/multihead_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_3/multiples"
  op: "Pack"
  input: "encoder/num_blocks_4/multihead_attention/Tile_3/multiples/0"
  input: "encoder/num_blocks_4/multihead_attention/Tile_3/multiples/1"
  input: "encoder/num_blocks_4/multihead_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Tile_3"
  op: "Tile"
  input: "encoder/num_blocks_4/multihead_attention/ExpandDims_1"
  input: "encoder/num_blocks_4/multihead_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/Reshape_1"
  input: "encoder/num_blocks_4/multihead_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/dropout/Identity"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/MatMul_1"
  op: "BatchMatMul"
  input: "encoder/num_blocks_4/multihead_attention/dropout/Identity"
  input: "encoder/num_blocks_4/multihead_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/split_3"
  op: "Split"
  input: "encoder/num_blocks_4/multihead_attention/split_3/split_dim"
  input: "encoder/num_blocks_4/multihead_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/concat_4"
  op: "ConcatV2"
  input: "encoder/num_blocks_4/multihead_attention/split_3"
  input: "encoder/num_blocks_4/multihead_attention/split_3:1"
  input: "encoder/num_blocks_4/multihead_attention/split_3:2"
  input: "encoder/num_blocks_4/multihead_attention/split_3:3"
  input: "encoder/num_blocks_4/multihead_attention/split_3:4"
  input: "encoder/num_blocks_4/multihead_attention/split_3:5"
  input: "encoder/num_blocks_4/multihead_attention/split_3:6"
  input: "encoder/num_blocks_4/multihead_attention/split_3:7"
  input: "encoder/num_blocks_4/multihead_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/add"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/concat_4"
  input: "encoder/num_blocks_3/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_4/multihead_attention/add"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention/add"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/Sub"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_4/multihead_attention/add"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/Mean_1"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/ln/Variable"
  input: "encoder/num_blocks_4/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/ln/Variable_1"
  input: "encoder/num_blocks_4/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention/add"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/add"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/ln/moments/variance"
  input: "encoder/num_blocks_4/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_4/multihead_attention/ln/add"
  input: "encoder/num_blocks_4/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_4/multihead_attention/ln/sub"
  input: "encoder/num_blocks_4/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/ln/Variable_1/read"
  input: "encoder/num_blocks_4/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/ln/mul"
  input: "encoder/num_blocks_4/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/bias"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_4/multihead_attention/ln/add_1"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/kernel/read"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/ExpandDims"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d/convolution/Squeeze"
  input: "encoder/num_blocks_4/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d/Relu"
  op: "Relu"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/bias"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d/Relu"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/kernel/read"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/convolution/Squeeze"
  input: "encoder/num_blocks_4/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/add"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention_1/conv1d_2/BiasAdd"
  input: "encoder/num_blocks_4/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_4/multihead_attention_1/add"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention_1/add"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Sub"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_4/multihead_attention_1/add"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Mean_1"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/shifted_mean"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/Variable"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention_1/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention_1/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/Variable_1"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention_1/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_4/multihead_attention_1/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_4/multihead_attention_1/add"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/add"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/moments/variance"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/sub"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/Variable_1/read"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/mul"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/dense/bias"
  input: "encoder/num_blocks_5/multihead_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Cast"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/axes"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Cast_1"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/mul"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/range/start"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Rank"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/range"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Shape"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Gather_1"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/ListDiff"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/add_1"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Prod"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/transpose"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention/dense/kernel/read"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/transpose_1"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/Const_2"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/MatMul"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_5/multihead_attention/dense/Tensordot"
  input: "encoder/num_blocks_5/multihead_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense/Relu"
  op: "Relu"
  input: "encoder/num_blocks_5/multihead_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/bias"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Cast"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/axes"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Cast_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/range/start"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Rank"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/range"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Shape"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Gather_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/ListDiff"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/add_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Prod"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/transpose"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/kernel/read"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/transpose_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/Const_2"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/MatMul"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Tensordot"
  input: "encoder/num_blocks_5/multihead_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/Relu"
  op: "Relu"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/bias"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_2/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Cast"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/axes"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Cast_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/mul"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/range/start"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Rank"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/range"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Shape"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Gather_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/ListDiff"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/add_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Prod"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/transpose"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/kernel/read"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/transpose_1"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Gather"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/Const_2"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/MatMul"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Tensordot"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dense_3/Relu"
  op: "Relu"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/split"
  op: "Split"
  input: "encoder/num_blocks_5/multihead_attention/split/split_dim"
  input: "encoder/num_blocks_5/multihead_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/split"
  input: "encoder/num_blocks_5/multihead_attention/split:1"
  input: "encoder/num_blocks_5/multihead_attention/split:2"
  input: "encoder/num_blocks_5/multihead_attention/split:3"
  input: "encoder/num_blocks_5/multihead_attention/split:4"
  input: "encoder/num_blocks_5/multihead_attention/split:5"
  input: "encoder/num_blocks_5/multihead_attention/split:6"
  input: "encoder/num_blocks_5/multihead_attention/split:7"
  input: "encoder/num_blocks_5/multihead_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/split_1"
  op: "Split"
  input: "encoder/num_blocks_5/multihead_attention/split_1/split_dim"
  input: "encoder/num_blocks_5/multihead_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat_1"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/split_1"
  input: "encoder/num_blocks_5/multihead_attention/split_1:1"
  input: "encoder/num_blocks_5/multihead_attention/split_1:2"
  input: "encoder/num_blocks_5/multihead_attention/split_1:3"
  input: "encoder/num_blocks_5/multihead_attention/split_1:4"
  input: "encoder/num_blocks_5/multihead_attention/split_1:5"
  input: "encoder/num_blocks_5/multihead_attention/split_1:6"
  input: "encoder/num_blocks_5/multihead_attention/split_1:7"
  input: "encoder/num_blocks_5/multihead_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/split_2"
  op: "Split"
  input: "encoder/num_blocks_5/multihead_attention/split_2/split_dim"
  input: "encoder/num_blocks_5/multihead_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat_2"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/split_2"
  input: "encoder/num_blocks_5/multihead_attention/split_2:1"
  input: "encoder/num_blocks_5/multihead_attention/split_2:2"
  input: "encoder/num_blocks_5/multihead_attention/split_2:3"
  input: "encoder/num_blocks_5/multihead_attention/split_2:4"
  input: "encoder/num_blocks_5/multihead_attention/split_2:5"
  input: "encoder/num_blocks_5/multihead_attention/split_2:6"
  input: "encoder/num_blocks_5/multihead_attention/split_2:7"
  input: "encoder/num_blocks_5/multihead_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention/concat_1"
  input: "encoder/num_blocks_5/multihead_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/MatMul"
  op: "BatchMatMul"
  input: "encoder/num_blocks_5/multihead_attention/concat"
  input: "encoder/num_blocks_5/multihead_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_5/multihead_attention/MatMul"
  input: "encoder/num_blocks_5/multihead_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_5/multihead_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Abs"
  op: "Abs"
  input: "encoder/num_blocks_5/multihead_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Sign"
  op: "Sign"
  input: "encoder/num_blocks_5/multihead_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile"
  op: "Tile"
  input: "encoder/num_blocks_5/multihead_attention/Sign"
  input: "encoder/num_blocks_5/multihead_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_5/multihead_attention/Tile"
  input: "encoder/num_blocks_5/multihead_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Shape"
  op: "Shape"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/strided_slice"
  op: "StridedSlice"
  input: "encoder/num_blocks_5/multihead_attention/Shape"
  input: "encoder/num_blocks_5/multihead_attention/strided_slice/stack"
  input: "encoder/num_blocks_5/multihead_attention/strided_slice/stack_1"
  input: "encoder/num_blocks_5/multihead_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_1/multiples"
  op: "Pack"
  input: "encoder/num_blocks_5/multihead_attention/Tile_1/multiples/0"
  input: "encoder/num_blocks_5/multihead_attention/strided_slice"
  input: "encoder/num_blocks_5/multihead_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_1"
  op: "Tile"
  input: "encoder/num_blocks_5/multihead_attention/ExpandDims"
  input: "encoder/num_blocks_5/multihead_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ones_like/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ones_like"
  op: "Fill"
  input: "encoder/num_blocks_5/multihead_attention/ones_like/Shape"
  input: "encoder/num_blocks_5/multihead_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/ones_like"
  input: "encoder/num_blocks_5/multihead_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Equal"
  op: "Equal"
  input: "encoder/num_blocks_5/multihead_attention/Tile_1"
  input: "encoder/num_blocks_5/multihead_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Select"
  op: "Select"
  input: "encoder/num_blocks_5/multihead_attention/Equal"
  input: "encoder/num_blocks_5/multihead_attention/mul"
  input: "encoder/num_blocks_5/multihead_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Shape_1"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Shape_2"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention/Rank"
  input: "encoder/num_blocks_5/multihead_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Slice/begin"
  op: "Pack"
  input: "encoder/num_blocks_5/multihead_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Slice"
  op: "Slice"
  input: "encoder/num_blocks_5/multihead_attention/Shape_2"
  input: "encoder/num_blocks_5/multihead_attention/Slice/begin"
  input: "encoder/num_blocks_5/multihead_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat_3"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/concat_3/values_0"
  input: "encoder/num_blocks_5/multihead_attention/Slice"
  input: "encoder/num_blocks_5/multihead_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Reshape"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/Select"
  input: "encoder/num_blocks_5/multihead_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Softmax"
  op: "Softmax"
  input: "encoder/num_blocks_5/multihead_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Reshape_1"
  op: "Reshape"
  input: "encoder/num_blocks_5/multihead_attention/Softmax"
  input: "encoder/num_blocks_5/multihead_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Sum_1"
  op: "Sum"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  input: "encoder/num_blocks_5/multihead_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Abs_1"
  op: "Abs"
  input: "encoder/num_blocks_5/multihead_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Sign_1"
  op: "Sign"
  input: "encoder/num_blocks_5/multihead_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_2"
  op: "Tile"
  input: "encoder/num_blocks_5/multihead_attention/Sign_1"
  input: "encoder/num_blocks_5/multihead_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_5/multihead_attention/Tile_2"
  input: "encoder/num_blocks_5/multihead_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/strided_slice_1"
  op: "StridedSlice"
  input: "encoder/num_blocks_5/multihead_attention/Shape_3"
  input: "encoder/num_blocks_5/multihead_attention/strided_slice_1/stack"
  input: "encoder/num_blocks_5/multihead_attention/strided_slice_1/stack_1"
  input: "encoder/num_blocks_5/multihead_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_3/multiples"
  op: "Pack"
  input: "encoder/num_blocks_5/multihead_attention/Tile_3/multiples/0"
  input: "encoder/num_blocks_5/multihead_attention/Tile_3/multiples/1"
  input: "encoder/num_blocks_5/multihead_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Tile_3"
  op: "Tile"
  input: "encoder/num_blocks_5/multihead_attention/ExpandDims_1"
  input: "encoder/num_blocks_5/multihead_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/mul_1"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/Reshape_1"
  input: "encoder/num_blocks_5/multihead_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/dropout/Identity"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/MatMul_1"
  op: "BatchMatMul"
  input: "encoder/num_blocks_5/multihead_attention/dropout/Identity"
  input: "encoder/num_blocks_5/multihead_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/split_3"
  op: "Split"
  input: "encoder/num_blocks_5/multihead_attention/split_3/split_dim"
  input: "encoder/num_blocks_5/multihead_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/concat_4"
  op: "ConcatV2"
  input: "encoder/num_blocks_5/multihead_attention/split_3"
  input: "encoder/num_blocks_5/multihead_attention/split_3:1"
  input: "encoder/num_blocks_5/multihead_attention/split_3:2"
  input: "encoder/num_blocks_5/multihead_attention/split_3:3"
  input: "encoder/num_blocks_5/multihead_attention/split_3:4"
  input: "encoder/num_blocks_5/multihead_attention/split_3:5"
  input: "encoder/num_blocks_5/multihead_attention/split_3:6"
  input: "encoder/num_blocks_5/multihead_attention/split_3:7"
  input: "encoder/num_blocks_5/multihead_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/add"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/concat_4"
  input: "encoder/num_blocks_4/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_5/multihead_attention/add"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention/add"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/Sub"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_5/multihead_attention/add"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/Mean_1"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/ln/Variable"
  input: "encoder/num_blocks_5/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/ln/Variable_1"
  input: "encoder/num_blocks_5/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention/add"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/add"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/ln/moments/variance"
  input: "encoder/num_blocks_5/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_5/multihead_attention/ln/add"
  input: "encoder/num_blocks_5/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_5/multihead_attention/ln/sub"
  input: "encoder/num_blocks_5/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/ln/Variable_1/read"
  input: "encoder/num_blocks_5/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/ln/mul"
  input: "encoder/num_blocks_5/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/bias"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_5/multihead_attention/ln/add_1"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/kernel/read"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/ExpandDims"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d/convolution/Squeeze"
  input: "encoder/num_blocks_5/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d/Relu"
  op: "Relu"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/bias"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d/Relu"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/kernel/read"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/ExpandDims"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/convolution/Squeeze"
  input: "encoder/num_blocks_5/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/add"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention_1/conv1d_2/BiasAdd"
  input: "encoder/num_blocks_5/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Mean"
  op: "Mean"
  input: "encoder/num_blocks_5/multihead_attention_1/add"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/StopGradient"
  op: "StopGradient"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention_1/add"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/shifted_mean"
  op: "Mean"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Sub"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "encoder/num_blocks_5/multihead_attention_1/add"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Mean_1"
  op: "Mean"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/SquaredDifference"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Square"
  op: "Square"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/variance"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Mean_1"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/moments/mean"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/shifted_mean"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/Variable/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/Variable"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention_1/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/Variable/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention_1/ln/Variable"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/Variable_1/Assign"
  op: "Assign"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/Variable_1"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention_1/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/Variable_1/read"
  op: "Identity"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encoder/num_blocks_5/multihead_attention_1/ln/Variable_1"
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/sub"
  op: "Sub"
  input: "encoder/num_blocks_5/multihead_attention_1/add"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/add"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/moments/variance"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/pow"
  op: "Pow"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/truediv"
  op: "RealDiv"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/sub"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/mul"
  op: "Mul"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/Variable_1/read"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  op: "Add"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/mul"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\035\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1053117886185646
      }
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1053117886185646
      }
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/dec_embed/lookup_table/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/dec_embed/lookup_table/Initializer/random_uniform/max"
  input: "decoder/dec_embed/lookup_table/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/dec_embed/lookup_table/Initializer/random_uniform/RandomUniform"
  input: "decoder/dec_embed/lookup_table/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table/Initializer/random_uniform"
  op: "Add"
  input: "decoder/dec_embed/lookup_table/Initializer/random_uniform/mul"
  input: "decoder/dec_embed/lookup_table/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table/Assign"
  op: "Assign"
  input: "decoder/dec_embed/lookup_table"
  input: "decoder/dec_embed/lookup_table/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/dec_embed/lookup_table/read"
  op: "Identity"
  input: "decoder/dec_embed/lookup_table"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/lookup_table"
      }
    }
  }
}
node {
  name: "decoder/dec_embed/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/dec_embed/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/dec_embed/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/dec_embed/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/dec_embed/strided_slice"
  op: "StridedSlice"
  input: "decoder/dec_embed/lookup_table/read"
  input: "decoder/dec_embed/strided_slice/stack"
  input: "decoder/dec_embed/strided_slice/stack_1"
  input: "decoder/dec_embed/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/dec_embed/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/dec_embed/concat"
  op: "ConcatV2"
  input: "decoder/dec_embed/zeros"
  input: "decoder/dec_embed/strided_slice"
  input: "decoder/dec_embed/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/dec_embed/embedding_lookup"
  op: "Gather"
  input: "decoder/dec_embed/concat"
  input: "concat"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_embed/concat"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/dec_embed/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 22.627416610717773
      }
    }
  }
}
node {
  name: "decoder/dec_embed/mul"
  op: "Mul"
  input: "decoder/dec_embed/embedding_lookup"
  input: "decoder/dec_embed/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/Shape"
  op: "Shape"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/strided_slice"
  op: "StridedSlice"
  input: "decoder/Shape"
  input: "decoder/strided_slice/stack"
  input: "decoder/strided_slice/stack_1"
  input: "decoder/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/range"
  op: "Range"
  input: "decoder/range/start"
  input: "decoder/strided_slice"
  input: "decoder/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/ExpandDims"
  op: "ExpandDims"
  input: "decoder/range"
  input: "decoder/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/Shape_1"
  op: "Shape"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/Shape_1"
  input: "decoder/strided_slice_1/stack"
  input: "decoder/strided_slice_1/stack_1"
  input: "decoder/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/Tile/multiples"
  op: "Pack"
  input: "decoder/strided_slice_1"
  input: "decoder/Tile/multiples/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/Tile"
  op: "Tile"
  input: "decoder/ExpandDims"
  input: "decoder/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10473261773586273
      }
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10473261773586273
      }
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/dec_pe/lookup_table/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/dec_pe/lookup_table/Initializer/random_uniform/max"
  input: "decoder/dec_pe/lookup_table/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/dec_pe/lookup_table/Initializer/random_uniform/RandomUniform"
  input: "decoder/dec_pe/lookup_table/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table/Initializer/random_uniform"
  op: "Add"
  input: "decoder/dec_pe/lookup_table/Initializer/random_uniform/mul"
  input: "decoder/dec_pe/lookup_table/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 35
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table/Assign"
  op: "Assign"
  input: "decoder/dec_pe/lookup_table"
  input: "decoder/dec_pe/lookup_table/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/dec_pe/lookup_table/read"
  op: "Identity"
  input: "decoder/dec_pe/lookup_table"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
}
node {
  name: "decoder/dec_pe/embedding_lookup"
  op: "Gather"
  input: "decoder/dec_pe/lookup_table/read"
  input: "decoder/Tile"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/dec_pe/lookup_table"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/add"
  op: "Add"
  input: "decoder/dec_embed/mul"
  input: "decoder/dec_pe/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/dropout/Identity"
  op: "Identity"
  input: "decoder/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/self_attention/dense/kernel"
  input: "decoder/num_blocks_0/self_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_0/self_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/self_attention/dense/bias"
  input: "decoder/num_blocks_0/self_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_0/self_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/dropout/Identity"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_0/self_attention/dense/kernel/read"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_0/self_attention/dense/Tensordot"
  input: "decoder/num_blocks_0/self_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_0/self_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/self_attention/dense_1/bias"
  input: "decoder/num_blocks_0/self_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_0/self_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "decoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/dropout/Identity"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_0/self_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_0/self_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_0/self_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_0/self_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/self_attention/dense_2/bias"
  input: "decoder/num_blocks_0/self_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_0/self_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "decoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/dropout/Identity"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_0/self_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_0/self_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_0/self_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_0/self_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/split"
  op: "Split"
  input: "decoder/num_blocks_0/self_attention/split/split_dim"
  input: "decoder/num_blocks_0/self_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/split"
  input: "decoder/num_blocks_0/self_attention/split:1"
  input: "decoder/num_blocks_0/self_attention/split:2"
  input: "decoder/num_blocks_0/self_attention/split:3"
  input: "decoder/num_blocks_0/self_attention/split:4"
  input: "decoder/num_blocks_0/self_attention/split:5"
  input: "decoder/num_blocks_0/self_attention/split:6"
  input: "decoder/num_blocks_0/self_attention/split:7"
  input: "decoder/num_blocks_0/self_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_0/self_attention/split_1/split_dim"
  input: "decoder/num_blocks_0/self_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/split_1"
  input: "decoder/num_blocks_0/self_attention/split_1:1"
  input: "decoder/num_blocks_0/self_attention/split_1:2"
  input: "decoder/num_blocks_0/self_attention/split_1:3"
  input: "decoder/num_blocks_0/self_attention/split_1:4"
  input: "decoder/num_blocks_0/self_attention/split_1:5"
  input: "decoder/num_blocks_0/self_attention/split_1:6"
  input: "decoder/num_blocks_0/self_attention/split_1:7"
  input: "decoder/num_blocks_0/self_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_0/self_attention/split_2/split_dim"
  input: "decoder/num_blocks_0/self_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/split_2"
  input: "decoder/num_blocks_0/self_attention/split_2:1"
  input: "decoder/num_blocks_0/self_attention/split_2:2"
  input: "decoder/num_blocks_0/self_attention/split_2:3"
  input: "decoder/num_blocks_0/self_attention/split_2:4"
  input: "decoder/num_blocks_0/self_attention/split_2:5"
  input: "decoder/num_blocks_0/self_attention/split_2:6"
  input: "decoder/num_blocks_0/self_attention/split_2:7"
  input: "decoder/num_blocks_0/self_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_0/self_attention/concat_1"
  input: "decoder/num_blocks_0/self_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_0/self_attention/concat"
  input: "decoder/num_blocks_0/self_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_0/self_attention/MatMul"
  input: "decoder/num_blocks_0/self_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Sum"
  op: "Sum"
  input: "decoder/dropout/Identity"
  input: "decoder/num_blocks_0/self_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_0/self_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_0/self_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_0/self_attention/Sign"
  input: "decoder/num_blocks_0/self_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_0/self_attention/Tile"
  input: "decoder/num_blocks_0/self_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Shape"
  op: "Shape"
  input: "decoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_0/self_attention/Shape"
  input: "decoder/num_blocks_0/self_attention/strided_slice/stack"
  input: "decoder/num_blocks_0/self_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_0/self_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_0/self_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_0/self_attention/strided_slice"
  input: "decoder/num_blocks_0/self_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_0/self_attention/ExpandDims"
  input: "decoder/num_blocks_0/self_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_0/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_0/self_attention/ones_like/Shape"
  input: "decoder/num_blocks_0/self_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/ones_like"
  input: "decoder/num_blocks_0/self_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_0/self_attention/Tile_1"
  input: "decoder/num_blocks_0/self_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_0/self_attention/Equal"
  input: "decoder/num_blocks_0/self_attention/mul"
  input: "decoder/num_blocks_0/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_0/self_attention/Select"
  input: "decoder/num_blocks_0/self_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_0/self_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_0/self_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ones_like_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000#\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ones_like_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ones_like_1"
  op: "Fill"
  input: "decoder/num_blocks_0/self_attention/ones_like_1/Shape"
  input: "decoder/num_blocks_0/self_attention/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/LinearOperatorTriL/MatrixBandPart"
  op: "MatrixBandPart"
  input: "decoder/num_blocks_0/self_attention/ones_like_1"
  input: "decoder/num_blocks_0/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  input: "decoder/num_blocks_0/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/LinearOperatorTriL/MatrixDiagPart"
  op: "MatrixDiagPart"
  input: "decoder/num_blocks_0/self_attention/LinearOperatorTriL/MatrixBandPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_0/self_attention/LinearOperatorTriL/MatrixBandPart"
  input: "decoder/num_blocks_0/self_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_0/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_2"
  op: "StridedSlice"
  input: "decoder/num_blocks_0/self_attention/Shape_1"
  input: "decoder/num_blocks_0/self_attention/strided_slice_2/stack"
  input: "decoder/num_blocks_0/self_attention/strided_slice_2/stack_1"
  input: "decoder/num_blocks_0/self_attention/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_2/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_2/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_2/multiples"
  op: "Pack"
  input: "decoder/num_blocks_0/self_attention/strided_slice_2"
  input: "decoder/num_blocks_0/self_attention/Tile_2/multiples/1"
  input: "decoder/num_blocks_0/self_attention/Tile_2/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_0/self_attention/ExpandDims_1"
  input: "decoder/num_blocks_0/self_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ones_like_2/Shape"
  op: "Shape"
  input: "decoder/num_blocks_0/self_attention/Tile_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ones_like_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ones_like_2"
  op: "Fill"
  input: "decoder/num_blocks_0/self_attention/ones_like_2/Shape"
  input: "decoder/num_blocks_0/self_attention/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/ones_like_2"
  input: "decoder/num_blocks_0/self_attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Equal_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Equal_1"
  op: "Equal"
  input: "decoder/num_blocks_0/self_attention/Tile_2"
  input: "decoder/num_blocks_0/self_attention/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Select_1"
  op: "Select"
  input: "decoder/num_blocks_0/self_attention/Equal_1"
  input: "decoder/num_blocks_0/self_attention/mul_1"
  input: "decoder/num_blocks_0/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_0/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Shape_3"
  op: "Shape"
  input: "decoder/num_blocks_0/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_0/self_attention/Rank"
  input: "decoder/num_blocks_0/self_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_0/self_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_0/self_attention/Shape_3"
  input: "decoder/num_blocks_0/self_attention/Slice/begin"
  input: "decoder/num_blocks_0/self_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/concat_3/values_0"
  input: "decoder/num_blocks_0/self_attention/Slice"
  input: "decoder/num_blocks_0/self_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/Select_1"
  input: "decoder/num_blocks_0/self_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_0/self_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_0/self_attention/Softmax"
  input: "decoder/num_blocks_0/self_attention/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Sum_1"
  op: "Sum"
  input: "decoder/dropout/Identity"
  input: "decoder/num_blocks_0/self_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_0/self_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_0/self_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_3/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_0/self_attention/Sign_1"
  input: "decoder/num_blocks_0/self_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ExpandDims_2"
  op: "ExpandDims"
  input: "decoder/num_blocks_0/self_attention/Tile_3"
  input: "decoder/num_blocks_0/self_attention/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Shape_4"
  op: "Shape"
  input: "decoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/strided_slice_3"
  op: "StridedSlice"
  input: "decoder/num_blocks_0/self_attention/Shape_4"
  input: "decoder/num_blocks_0/self_attention/strided_slice_3/stack"
  input: "decoder/num_blocks_0/self_attention/strided_slice_3/stack_1"
  input: "decoder/num_blocks_0/self_attention/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_4/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_4/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_4/multiples"
  op: "Pack"
  input: "decoder/num_blocks_0/self_attention/Tile_4/multiples/0"
  input: "decoder/num_blocks_0/self_attention/Tile_4/multiples/1"
  input: "decoder/num_blocks_0/self_attention/strided_slice_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Tile_4"
  op: "Tile"
  input: "decoder/num_blocks_0/self_attention/ExpandDims_2"
  input: "decoder/num_blocks_0/self_attention/Tile_4/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/mul_2"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/Reshape_1"
  input: "decoder/num_blocks_0/self_attention/Tile_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_0/self_attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_0/self_attention/dropout/Identity"
  input: "decoder/num_blocks_0/self_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_0/self_attention/split_3/split_dim"
  input: "decoder/num_blocks_0/self_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/self_attention/split_3"
  input: "decoder/num_blocks_0/self_attention/split_3:1"
  input: "decoder/num_blocks_0/self_attention/split_3:2"
  input: "decoder/num_blocks_0/self_attention/split_3:3"
  input: "decoder/num_blocks_0/self_attention/split_3:4"
  input: "decoder/num_blocks_0/self_attention/split_3:5"
  input: "decoder/num_blocks_0/self_attention/split_3:6"
  input: "decoder/num_blocks_0/self_attention/split_3:7"
  input: "decoder/num_blocks_0/self_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/add"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/concat_4"
  input: "decoder/dropout/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_0/self_attention/add"
  input: "decoder/num_blocks_0/self_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_0/self_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_0/self_attention/add"
  input: "decoder/num_blocks_0/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_0/self_attention/ln/moments/Sub"
  input: "decoder/num_blocks_0/self_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_0/self_attention/add"
  input: "decoder/num_blocks_0/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_0/self_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_0/self_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_0/self_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_0/self_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_0/self_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_0/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/self_attention/ln/Variable"
  input: "decoder/num_blocks_0/self_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_0/self_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/self_attention/ln/Variable_1"
  input: "decoder/num_blocks_0/self_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_0/self_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/self_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/self_attention/add"
  input: "decoder/num_blocks_0/self_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/ln/moments/variance"
  input: "decoder/num_blocks_0/self_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_0/self_attention/ln/add"
  input: "decoder/num_blocks_0/self_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_0/self_attention/ln/sub"
  input: "decoder/num_blocks_0/self_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/self_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_0/self_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/self_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_0/self_attention/ln/mul"
  input: "decoder/num_blocks_0/self_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/vanilla_attention/dense/bias"
  input: "decoder/num_blocks_0/vanilla_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_0/vanilla_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_0/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_0/self_attention/ln/add_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_0/vanilla_attention/dense/kernel/read"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Tensordot"
  input: "decoder/num_blocks_0/vanilla_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_0/vanilla_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/bias"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_0/vanilla_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/bias"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/split"
  op: "Split"
  input: "decoder/num_blocks_0/vanilla_attention/split/split_dim"
  input: "decoder/num_blocks_0/vanilla_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/split"
  input: "decoder/num_blocks_0/vanilla_attention/split:1"
  input: "decoder/num_blocks_0/vanilla_attention/split:2"
  input: "decoder/num_blocks_0/vanilla_attention/split:3"
  input: "decoder/num_blocks_0/vanilla_attention/split:4"
  input: "decoder/num_blocks_0/vanilla_attention/split:5"
  input: "decoder/num_blocks_0/vanilla_attention/split:6"
  input: "decoder/num_blocks_0/vanilla_attention/split:7"
  input: "decoder/num_blocks_0/vanilla_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_0/vanilla_attention/split_1/split_dim"
  input: "decoder/num_blocks_0/vanilla_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/split_1"
  input: "decoder/num_blocks_0/vanilla_attention/split_1:1"
  input: "decoder/num_blocks_0/vanilla_attention/split_1:2"
  input: "decoder/num_blocks_0/vanilla_attention/split_1:3"
  input: "decoder/num_blocks_0/vanilla_attention/split_1:4"
  input: "decoder/num_blocks_0/vanilla_attention/split_1:5"
  input: "decoder/num_blocks_0/vanilla_attention/split_1:6"
  input: "decoder/num_blocks_0/vanilla_attention/split_1:7"
  input: "decoder/num_blocks_0/vanilla_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_0/vanilla_attention/split_2/split_dim"
  input: "decoder/num_blocks_0/vanilla_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/split_2"
  input: "decoder/num_blocks_0/vanilla_attention/split_2:1"
  input: "decoder/num_blocks_0/vanilla_attention/split_2:2"
  input: "decoder/num_blocks_0/vanilla_attention/split_2:3"
  input: "decoder/num_blocks_0/vanilla_attention/split_2:4"
  input: "decoder/num_blocks_0/vanilla_attention/split_2:5"
  input: "decoder/num_blocks_0/vanilla_attention/split_2:6"
  input: "decoder/num_blocks_0/vanilla_attention/split_2:7"
  input: "decoder/num_blocks_0/vanilla_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_0/vanilla_attention/concat_1"
  input: "decoder/num_blocks_0/vanilla_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_0/vanilla_attention/concat"
  input: "decoder/num_blocks_0/vanilla_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_0/vanilla_attention/MatMul"
  input: "decoder/num_blocks_0/vanilla_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_0/vanilla_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_0/vanilla_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_0/vanilla_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_0/vanilla_attention/Sign"
  input: "decoder/num_blocks_0/vanilla_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_0/vanilla_attention/Tile"
  input: "decoder/num_blocks_0/vanilla_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_0/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_0/vanilla_attention/Shape"
  input: "decoder/num_blocks_0/vanilla_attention/strided_slice/stack"
  input: "decoder/num_blocks_0/vanilla_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_0/vanilla_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_0/vanilla_attention/strided_slice"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_0/vanilla_attention/ExpandDims"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_0/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_0/vanilla_attention/ones_like/Shape"
  input: "decoder/num_blocks_0/vanilla_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/ones_like"
  input: "decoder/num_blocks_0/vanilla_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_1"
  input: "decoder/num_blocks_0/vanilla_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_0/vanilla_attention/Equal"
  input: "decoder/num_blocks_0/vanilla_attention/mul"
  input: "decoder/num_blocks_0/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_0/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_0/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_0/vanilla_attention/Rank"
  input: "decoder/num_blocks_0/vanilla_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_0/vanilla_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_0/vanilla_attention/Shape_2"
  input: "decoder/num_blocks_0/vanilla_attention/Slice/begin"
  input: "decoder/num_blocks_0/vanilla_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/concat_3/values_0"
  input: "decoder/num_blocks_0/vanilla_attention/Slice"
  input: "decoder/num_blocks_0/vanilla_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/Select"
  input: "decoder/num_blocks_0/vanilla_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_0/vanilla_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_0/vanilla_attention/Softmax"
  input: "decoder/num_blocks_0/vanilla_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_0/self_attention/ln/add_1"
  input: "decoder/num_blocks_0/vanilla_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_0/vanilla_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_0/vanilla_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_0/vanilla_attention/Sign_1"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_2"
  input: "decoder/num_blocks_0/vanilla_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_0/vanilla_attention/Shape_3"
  input: "decoder/num_blocks_0/vanilla_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_0/vanilla_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_0/vanilla_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_3/multiples"
  op: "Pack"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_3/multiples/0"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_3/multiples/1"
  input: "decoder/num_blocks_0/vanilla_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_0/vanilla_attention/ExpandDims_1"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/Reshape_1"
  input: "decoder/num_blocks_0/vanilla_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_0/vanilla_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_0/vanilla_attention/dropout/Identity"
  input: "decoder/num_blocks_0/vanilla_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_0/vanilla_attention/split_3/split_dim"
  input: "decoder/num_blocks_0/vanilla_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_0/vanilla_attention/split_3"
  input: "decoder/num_blocks_0/vanilla_attention/split_3:1"
  input: "decoder/num_blocks_0/vanilla_attention/split_3:2"
  input: "decoder/num_blocks_0/vanilla_attention/split_3:3"
  input: "decoder/num_blocks_0/vanilla_attention/split_3:4"
  input: "decoder/num_blocks_0/vanilla_attention/split_3:5"
  input: "decoder/num_blocks_0/vanilla_attention/split_3:6"
  input: "decoder/num_blocks_0/vanilla_attention/split_3:7"
  input: "decoder/num_blocks_0/vanilla_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/add"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/concat_4"
  input: "decoder/num_blocks_0/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_0/vanilla_attention/add"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_0/vanilla_attention/add"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/Sub"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_0/vanilla_attention/add"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/vanilla_attention/ln/Variable"
  input: "decoder/num_blocks_0/vanilla_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_0/vanilla_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/vanilla_attention/ln/Variable_1"
  input: "decoder/num_blocks_0/vanilla_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_0/vanilla_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/vanilla_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/vanilla_attention/add"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/ln/moments/variance"
  input: "decoder/num_blocks_0/vanilla_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_0/vanilla_attention/ln/add"
  input: "decoder/num_blocks_0/vanilla_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_0/vanilla_attention/ln/sub"
  input: "decoder/num_blocks_0/vanilla_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/vanilla_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_0/vanilla_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/vanilla_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_0/vanilla_attention/ln/mul"
  input: "decoder/num_blocks_0/vanilla_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/bias"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_0/vanilla_attention/ln/add_1"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/kernel/read"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/ExpandDims"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/convolution/Squeeze"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d/Relu"
  op: "Relu"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/bias"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_0/multihead_attention/conv1d/Relu"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/kernel/read"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/ExpandDims"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_2/convolution/Squeeze"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/add"
  op: "Add"
  input: "decoder/num_blocks_0/multihead_attention/conv1d_2/BiasAdd"
  input: "decoder/num_blocks_0/vanilla_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_0/multihead_attention/add"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_0/multihead_attention/add"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/Sub"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_0/multihead_attention/add"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/multihead_attention/ln/Variable"
  input: "decoder/num_blocks_0/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_0/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_0/multihead_attention/ln/Variable_1"
  input: "decoder/num_blocks_0/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_0/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_0/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_0/multihead_attention/add"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_0/multihead_attention/ln/moments/variance"
  input: "decoder/num_blocks_0/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_0/multihead_attention/ln/add"
  input: "decoder/num_blocks_0/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_0/multihead_attention/ln/sub"
  input: "decoder/num_blocks_0/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_0/multihead_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_0/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_0/multihead_attention/ln/mul"
  input: "decoder/num_blocks_0/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/self_attention/dense/kernel"
  input: "decoder/num_blocks_1/self_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_1/self_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/self_attention/dense/bias"
  input: "decoder/num_blocks_1/self_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_1/self_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_1/self_attention/dense/kernel/read"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_1/self_attention/dense/Tensordot"
  input: "decoder/num_blocks_1/self_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_1/self_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/self_attention/dense_1/bias"
  input: "decoder/num_blocks_1/self_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_1/self_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_1/self_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_1/self_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_1/self_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_1/self_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/self_attention/dense_2/bias"
  input: "decoder/num_blocks_1/self_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_1/self_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_1/self_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_1/self_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_1/self_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_1/self_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/split"
  op: "Split"
  input: "decoder/num_blocks_1/self_attention/split/split_dim"
  input: "decoder/num_blocks_1/self_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/split"
  input: "decoder/num_blocks_1/self_attention/split:1"
  input: "decoder/num_blocks_1/self_attention/split:2"
  input: "decoder/num_blocks_1/self_attention/split:3"
  input: "decoder/num_blocks_1/self_attention/split:4"
  input: "decoder/num_blocks_1/self_attention/split:5"
  input: "decoder/num_blocks_1/self_attention/split:6"
  input: "decoder/num_blocks_1/self_attention/split:7"
  input: "decoder/num_blocks_1/self_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_1/self_attention/split_1/split_dim"
  input: "decoder/num_blocks_1/self_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/split_1"
  input: "decoder/num_blocks_1/self_attention/split_1:1"
  input: "decoder/num_blocks_1/self_attention/split_1:2"
  input: "decoder/num_blocks_1/self_attention/split_1:3"
  input: "decoder/num_blocks_1/self_attention/split_1:4"
  input: "decoder/num_blocks_1/self_attention/split_1:5"
  input: "decoder/num_blocks_1/self_attention/split_1:6"
  input: "decoder/num_blocks_1/self_attention/split_1:7"
  input: "decoder/num_blocks_1/self_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_1/self_attention/split_2/split_dim"
  input: "decoder/num_blocks_1/self_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/split_2"
  input: "decoder/num_blocks_1/self_attention/split_2:1"
  input: "decoder/num_blocks_1/self_attention/split_2:2"
  input: "decoder/num_blocks_1/self_attention/split_2:3"
  input: "decoder/num_blocks_1/self_attention/split_2:4"
  input: "decoder/num_blocks_1/self_attention/split_2:5"
  input: "decoder/num_blocks_1/self_attention/split_2:6"
  input: "decoder/num_blocks_1/self_attention/split_2:7"
  input: "decoder/num_blocks_1/self_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_1/self_attention/concat_1"
  input: "decoder/num_blocks_1/self_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_1/self_attention/concat"
  input: "decoder/num_blocks_1/self_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_1/self_attention/MatMul"
  input: "decoder/num_blocks_1/self_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Sum"
  op: "Sum"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_1/self_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_1/self_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_1/self_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_1/self_attention/Sign"
  input: "decoder/num_blocks_1/self_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_1/self_attention/Tile"
  input: "decoder/num_blocks_1/self_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_1/self_attention/Shape"
  input: "decoder/num_blocks_1/self_attention/strided_slice/stack"
  input: "decoder/num_blocks_1/self_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_1/self_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_1/self_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_1/self_attention/strided_slice"
  input: "decoder/num_blocks_1/self_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_1/self_attention/ExpandDims"
  input: "decoder/num_blocks_1/self_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_1/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_1/self_attention/ones_like/Shape"
  input: "decoder/num_blocks_1/self_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/ones_like"
  input: "decoder/num_blocks_1/self_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_1/self_attention/Tile_1"
  input: "decoder/num_blocks_1/self_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_1/self_attention/Equal"
  input: "decoder/num_blocks_1/self_attention/mul"
  input: "decoder/num_blocks_1/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_1/self_attention/Select"
  input: "decoder/num_blocks_1/self_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_1/self_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_1/self_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ones_like_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000#\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ones_like_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ones_like_1"
  op: "Fill"
  input: "decoder/num_blocks_1/self_attention/ones_like_1/Shape"
  input: "decoder/num_blocks_1/self_attention/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/LinearOperatorTriL/MatrixBandPart"
  op: "MatrixBandPart"
  input: "decoder/num_blocks_1/self_attention/ones_like_1"
  input: "decoder/num_blocks_1/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  input: "decoder/num_blocks_1/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/LinearOperatorTriL/MatrixDiagPart"
  op: "MatrixDiagPart"
  input: "decoder/num_blocks_1/self_attention/LinearOperatorTriL/MatrixBandPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_1/self_attention/LinearOperatorTriL/MatrixBandPart"
  input: "decoder/num_blocks_1/self_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_1/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_2"
  op: "StridedSlice"
  input: "decoder/num_blocks_1/self_attention/Shape_1"
  input: "decoder/num_blocks_1/self_attention/strided_slice_2/stack"
  input: "decoder/num_blocks_1/self_attention/strided_slice_2/stack_1"
  input: "decoder/num_blocks_1/self_attention/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_2/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_2/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_2/multiples"
  op: "Pack"
  input: "decoder/num_blocks_1/self_attention/strided_slice_2"
  input: "decoder/num_blocks_1/self_attention/Tile_2/multiples/1"
  input: "decoder/num_blocks_1/self_attention/Tile_2/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_1/self_attention/ExpandDims_1"
  input: "decoder/num_blocks_1/self_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ones_like_2/Shape"
  op: "Shape"
  input: "decoder/num_blocks_1/self_attention/Tile_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ones_like_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ones_like_2"
  op: "Fill"
  input: "decoder/num_blocks_1/self_attention/ones_like_2/Shape"
  input: "decoder/num_blocks_1/self_attention/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/ones_like_2"
  input: "decoder/num_blocks_1/self_attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Equal_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Equal_1"
  op: "Equal"
  input: "decoder/num_blocks_1/self_attention/Tile_2"
  input: "decoder/num_blocks_1/self_attention/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Select_1"
  op: "Select"
  input: "decoder/num_blocks_1/self_attention/Equal_1"
  input: "decoder/num_blocks_1/self_attention/mul_1"
  input: "decoder/num_blocks_1/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_1/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Shape_3"
  op: "Shape"
  input: "decoder/num_blocks_1/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_1/self_attention/Rank"
  input: "decoder/num_blocks_1/self_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_1/self_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_1/self_attention/Shape_3"
  input: "decoder/num_blocks_1/self_attention/Slice/begin"
  input: "decoder/num_blocks_1/self_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/concat_3/values_0"
  input: "decoder/num_blocks_1/self_attention/Slice"
  input: "decoder/num_blocks_1/self_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/Select_1"
  input: "decoder/num_blocks_1/self_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_1/self_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_1/self_attention/Softmax"
  input: "decoder/num_blocks_1/self_attention/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_1/self_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_1/self_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_1/self_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_3/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_1/self_attention/Sign_1"
  input: "decoder/num_blocks_1/self_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ExpandDims_2"
  op: "ExpandDims"
  input: "decoder/num_blocks_1/self_attention/Tile_3"
  input: "decoder/num_blocks_1/self_attention/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Shape_4"
  op: "Shape"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/strided_slice_3"
  op: "StridedSlice"
  input: "decoder/num_blocks_1/self_attention/Shape_4"
  input: "decoder/num_blocks_1/self_attention/strided_slice_3/stack"
  input: "decoder/num_blocks_1/self_attention/strided_slice_3/stack_1"
  input: "decoder/num_blocks_1/self_attention/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_4/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_4/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_4/multiples"
  op: "Pack"
  input: "decoder/num_blocks_1/self_attention/Tile_4/multiples/0"
  input: "decoder/num_blocks_1/self_attention/Tile_4/multiples/1"
  input: "decoder/num_blocks_1/self_attention/strided_slice_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Tile_4"
  op: "Tile"
  input: "decoder/num_blocks_1/self_attention/ExpandDims_2"
  input: "decoder/num_blocks_1/self_attention/Tile_4/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/mul_2"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/Reshape_1"
  input: "decoder/num_blocks_1/self_attention/Tile_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_1/self_attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_1/self_attention/dropout/Identity"
  input: "decoder/num_blocks_1/self_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_1/self_attention/split_3/split_dim"
  input: "decoder/num_blocks_1/self_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/self_attention/split_3"
  input: "decoder/num_blocks_1/self_attention/split_3:1"
  input: "decoder/num_blocks_1/self_attention/split_3:2"
  input: "decoder/num_blocks_1/self_attention/split_3:3"
  input: "decoder/num_blocks_1/self_attention/split_3:4"
  input: "decoder/num_blocks_1/self_attention/split_3:5"
  input: "decoder/num_blocks_1/self_attention/split_3:6"
  input: "decoder/num_blocks_1/self_attention/split_3:7"
  input: "decoder/num_blocks_1/self_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/add"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/concat_4"
  input: "decoder/num_blocks_0/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_1/self_attention/add"
  input: "decoder/num_blocks_1/self_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_1/self_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_1/self_attention/add"
  input: "decoder/num_blocks_1/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_1/self_attention/ln/moments/Sub"
  input: "decoder/num_blocks_1/self_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_1/self_attention/add"
  input: "decoder/num_blocks_1/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_1/self_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_1/self_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_1/self_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_1/self_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_1/self_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_1/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/self_attention/ln/Variable"
  input: "decoder/num_blocks_1/self_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_1/self_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/self_attention/ln/Variable_1"
  input: "decoder/num_blocks_1/self_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_1/self_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/self_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/self_attention/add"
  input: "decoder/num_blocks_1/self_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/ln/moments/variance"
  input: "decoder/num_blocks_1/self_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_1/self_attention/ln/add"
  input: "decoder/num_blocks_1/self_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_1/self_attention/ln/sub"
  input: "decoder/num_blocks_1/self_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/self_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_1/self_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/self_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_1/self_attention/ln/mul"
  input: "decoder/num_blocks_1/self_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/vanilla_attention/dense/bias"
  input: "decoder/num_blocks_1/vanilla_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_1/vanilla_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_1/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_1/self_attention/ln/add_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_1/vanilla_attention/dense/kernel/read"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Tensordot"
  input: "decoder/num_blocks_1/vanilla_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_1/vanilla_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/bias"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_1/vanilla_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/bias"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/split"
  op: "Split"
  input: "decoder/num_blocks_1/vanilla_attention/split/split_dim"
  input: "decoder/num_blocks_1/vanilla_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/split"
  input: "decoder/num_blocks_1/vanilla_attention/split:1"
  input: "decoder/num_blocks_1/vanilla_attention/split:2"
  input: "decoder/num_blocks_1/vanilla_attention/split:3"
  input: "decoder/num_blocks_1/vanilla_attention/split:4"
  input: "decoder/num_blocks_1/vanilla_attention/split:5"
  input: "decoder/num_blocks_1/vanilla_attention/split:6"
  input: "decoder/num_blocks_1/vanilla_attention/split:7"
  input: "decoder/num_blocks_1/vanilla_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_1/vanilla_attention/split_1/split_dim"
  input: "decoder/num_blocks_1/vanilla_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/split_1"
  input: "decoder/num_blocks_1/vanilla_attention/split_1:1"
  input: "decoder/num_blocks_1/vanilla_attention/split_1:2"
  input: "decoder/num_blocks_1/vanilla_attention/split_1:3"
  input: "decoder/num_blocks_1/vanilla_attention/split_1:4"
  input: "decoder/num_blocks_1/vanilla_attention/split_1:5"
  input: "decoder/num_blocks_1/vanilla_attention/split_1:6"
  input: "decoder/num_blocks_1/vanilla_attention/split_1:7"
  input: "decoder/num_blocks_1/vanilla_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_1/vanilla_attention/split_2/split_dim"
  input: "decoder/num_blocks_1/vanilla_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/split_2"
  input: "decoder/num_blocks_1/vanilla_attention/split_2:1"
  input: "decoder/num_blocks_1/vanilla_attention/split_2:2"
  input: "decoder/num_blocks_1/vanilla_attention/split_2:3"
  input: "decoder/num_blocks_1/vanilla_attention/split_2:4"
  input: "decoder/num_blocks_1/vanilla_attention/split_2:5"
  input: "decoder/num_blocks_1/vanilla_attention/split_2:6"
  input: "decoder/num_blocks_1/vanilla_attention/split_2:7"
  input: "decoder/num_blocks_1/vanilla_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_1/vanilla_attention/concat_1"
  input: "decoder/num_blocks_1/vanilla_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_1/vanilla_attention/concat"
  input: "decoder/num_blocks_1/vanilla_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_1/vanilla_attention/MatMul"
  input: "decoder/num_blocks_1/vanilla_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_1/vanilla_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_1/vanilla_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_1/vanilla_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_1/vanilla_attention/Sign"
  input: "decoder/num_blocks_1/vanilla_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_1/vanilla_attention/Tile"
  input: "decoder/num_blocks_1/vanilla_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_1/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_1/vanilla_attention/Shape"
  input: "decoder/num_blocks_1/vanilla_attention/strided_slice/stack"
  input: "decoder/num_blocks_1/vanilla_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_1/vanilla_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_1/vanilla_attention/strided_slice"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_1/vanilla_attention/ExpandDims"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_1/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_1/vanilla_attention/ones_like/Shape"
  input: "decoder/num_blocks_1/vanilla_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/ones_like"
  input: "decoder/num_blocks_1/vanilla_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_1"
  input: "decoder/num_blocks_1/vanilla_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_1/vanilla_attention/Equal"
  input: "decoder/num_blocks_1/vanilla_attention/mul"
  input: "decoder/num_blocks_1/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_1/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_1/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_1/vanilla_attention/Rank"
  input: "decoder/num_blocks_1/vanilla_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_1/vanilla_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_1/vanilla_attention/Shape_2"
  input: "decoder/num_blocks_1/vanilla_attention/Slice/begin"
  input: "decoder/num_blocks_1/vanilla_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/concat_3/values_0"
  input: "decoder/num_blocks_1/vanilla_attention/Slice"
  input: "decoder/num_blocks_1/vanilla_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/Select"
  input: "decoder/num_blocks_1/vanilla_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_1/vanilla_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_1/vanilla_attention/Softmax"
  input: "decoder/num_blocks_1/vanilla_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_1/self_attention/ln/add_1"
  input: "decoder/num_blocks_1/vanilla_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_1/vanilla_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_1/vanilla_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_1/vanilla_attention/Sign_1"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_2"
  input: "decoder/num_blocks_1/vanilla_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_1/vanilla_attention/Shape_3"
  input: "decoder/num_blocks_1/vanilla_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_1/vanilla_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_1/vanilla_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_3/multiples"
  op: "Pack"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_3/multiples/0"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_3/multiples/1"
  input: "decoder/num_blocks_1/vanilla_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_1/vanilla_attention/ExpandDims_1"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/Reshape_1"
  input: "decoder/num_blocks_1/vanilla_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_1/vanilla_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_1/vanilla_attention/dropout/Identity"
  input: "decoder/num_blocks_1/vanilla_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_1/vanilla_attention/split_3/split_dim"
  input: "decoder/num_blocks_1/vanilla_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_1/vanilla_attention/split_3"
  input: "decoder/num_blocks_1/vanilla_attention/split_3:1"
  input: "decoder/num_blocks_1/vanilla_attention/split_3:2"
  input: "decoder/num_blocks_1/vanilla_attention/split_3:3"
  input: "decoder/num_blocks_1/vanilla_attention/split_3:4"
  input: "decoder/num_blocks_1/vanilla_attention/split_3:5"
  input: "decoder/num_blocks_1/vanilla_attention/split_3:6"
  input: "decoder/num_blocks_1/vanilla_attention/split_3:7"
  input: "decoder/num_blocks_1/vanilla_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/add"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/concat_4"
  input: "decoder/num_blocks_1/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_1/vanilla_attention/add"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_1/vanilla_attention/add"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/Sub"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_1/vanilla_attention/add"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/vanilla_attention/ln/Variable"
  input: "decoder/num_blocks_1/vanilla_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_1/vanilla_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/vanilla_attention/ln/Variable_1"
  input: "decoder/num_blocks_1/vanilla_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_1/vanilla_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/vanilla_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/vanilla_attention/add"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/ln/moments/variance"
  input: "decoder/num_blocks_1/vanilla_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_1/vanilla_attention/ln/add"
  input: "decoder/num_blocks_1/vanilla_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_1/vanilla_attention/ln/sub"
  input: "decoder/num_blocks_1/vanilla_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/vanilla_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_1/vanilla_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/vanilla_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_1/vanilla_attention/ln/mul"
  input: "decoder/num_blocks_1/vanilla_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/bias"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_1/vanilla_attention/ln/add_1"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/kernel/read"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/ExpandDims"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/convolution/Squeeze"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d/Relu"
  op: "Relu"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/bias"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_1/multihead_attention/conv1d/Relu"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/kernel/read"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/ExpandDims"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_2/convolution/Squeeze"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/add"
  op: "Add"
  input: "decoder/num_blocks_1/multihead_attention/conv1d_2/BiasAdd"
  input: "decoder/num_blocks_1/vanilla_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_1/multihead_attention/add"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_1/multihead_attention/add"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/Sub"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_1/multihead_attention/add"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/multihead_attention/ln/Variable"
  input: "decoder/num_blocks_1/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_1/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_1/multihead_attention/ln/Variable_1"
  input: "decoder/num_blocks_1/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_1/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_1/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_1/multihead_attention/add"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_1/multihead_attention/ln/moments/variance"
  input: "decoder/num_blocks_1/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_1/multihead_attention/ln/add"
  input: "decoder/num_blocks_1/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_1/multihead_attention/ln/sub"
  input: "decoder/num_blocks_1/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_1/multihead_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_1/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_1/multihead_attention/ln/mul"
  input: "decoder/num_blocks_1/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/self_attention/dense/kernel"
  input: "decoder/num_blocks_2/self_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_2/self_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/self_attention/dense/bias"
  input: "decoder/num_blocks_2/self_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_2/self_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_2/self_attention/dense/kernel/read"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_2/self_attention/dense/Tensordot"
  input: "decoder/num_blocks_2/self_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_2/self_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/self_attention/dense_1/bias"
  input: "decoder/num_blocks_2/self_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_2/self_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_2/self_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_2/self_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_2/self_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_2/self_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/self_attention/dense_2/bias"
  input: "decoder/num_blocks_2/self_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_2/self_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_2/self_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_2/self_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_2/self_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_2/self_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/split"
  op: "Split"
  input: "decoder/num_blocks_2/self_attention/split/split_dim"
  input: "decoder/num_blocks_2/self_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/split"
  input: "decoder/num_blocks_2/self_attention/split:1"
  input: "decoder/num_blocks_2/self_attention/split:2"
  input: "decoder/num_blocks_2/self_attention/split:3"
  input: "decoder/num_blocks_2/self_attention/split:4"
  input: "decoder/num_blocks_2/self_attention/split:5"
  input: "decoder/num_blocks_2/self_attention/split:6"
  input: "decoder/num_blocks_2/self_attention/split:7"
  input: "decoder/num_blocks_2/self_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_2/self_attention/split_1/split_dim"
  input: "decoder/num_blocks_2/self_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/split_1"
  input: "decoder/num_blocks_2/self_attention/split_1:1"
  input: "decoder/num_blocks_2/self_attention/split_1:2"
  input: "decoder/num_blocks_2/self_attention/split_1:3"
  input: "decoder/num_blocks_2/self_attention/split_1:4"
  input: "decoder/num_blocks_2/self_attention/split_1:5"
  input: "decoder/num_blocks_2/self_attention/split_1:6"
  input: "decoder/num_blocks_2/self_attention/split_1:7"
  input: "decoder/num_blocks_2/self_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_2/self_attention/split_2/split_dim"
  input: "decoder/num_blocks_2/self_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/split_2"
  input: "decoder/num_blocks_2/self_attention/split_2:1"
  input: "decoder/num_blocks_2/self_attention/split_2:2"
  input: "decoder/num_blocks_2/self_attention/split_2:3"
  input: "decoder/num_blocks_2/self_attention/split_2:4"
  input: "decoder/num_blocks_2/self_attention/split_2:5"
  input: "decoder/num_blocks_2/self_attention/split_2:6"
  input: "decoder/num_blocks_2/self_attention/split_2:7"
  input: "decoder/num_blocks_2/self_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_2/self_attention/concat_1"
  input: "decoder/num_blocks_2/self_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_2/self_attention/concat"
  input: "decoder/num_blocks_2/self_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_2/self_attention/MatMul"
  input: "decoder/num_blocks_2/self_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Sum"
  op: "Sum"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_2/self_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_2/self_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_2/self_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_2/self_attention/Sign"
  input: "decoder/num_blocks_2/self_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_2/self_attention/Tile"
  input: "decoder/num_blocks_2/self_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_2/self_attention/Shape"
  input: "decoder/num_blocks_2/self_attention/strided_slice/stack"
  input: "decoder/num_blocks_2/self_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_2/self_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_2/self_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_2/self_attention/strided_slice"
  input: "decoder/num_blocks_2/self_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_2/self_attention/ExpandDims"
  input: "decoder/num_blocks_2/self_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_2/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_2/self_attention/ones_like/Shape"
  input: "decoder/num_blocks_2/self_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/ones_like"
  input: "decoder/num_blocks_2/self_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_2/self_attention/Tile_1"
  input: "decoder/num_blocks_2/self_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_2/self_attention/Equal"
  input: "decoder/num_blocks_2/self_attention/mul"
  input: "decoder/num_blocks_2/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_2/self_attention/Select"
  input: "decoder/num_blocks_2/self_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_2/self_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_2/self_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ones_like_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000#\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ones_like_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ones_like_1"
  op: "Fill"
  input: "decoder/num_blocks_2/self_attention/ones_like_1/Shape"
  input: "decoder/num_blocks_2/self_attention/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/LinearOperatorTriL/MatrixBandPart"
  op: "MatrixBandPart"
  input: "decoder/num_blocks_2/self_attention/ones_like_1"
  input: "decoder/num_blocks_2/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  input: "decoder/num_blocks_2/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/LinearOperatorTriL/MatrixDiagPart"
  op: "MatrixDiagPart"
  input: "decoder/num_blocks_2/self_attention/LinearOperatorTriL/MatrixBandPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_2/self_attention/LinearOperatorTriL/MatrixBandPart"
  input: "decoder/num_blocks_2/self_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_2/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_2"
  op: "StridedSlice"
  input: "decoder/num_blocks_2/self_attention/Shape_1"
  input: "decoder/num_blocks_2/self_attention/strided_slice_2/stack"
  input: "decoder/num_blocks_2/self_attention/strided_slice_2/stack_1"
  input: "decoder/num_blocks_2/self_attention/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_2/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_2/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_2/multiples"
  op: "Pack"
  input: "decoder/num_blocks_2/self_attention/strided_slice_2"
  input: "decoder/num_blocks_2/self_attention/Tile_2/multiples/1"
  input: "decoder/num_blocks_2/self_attention/Tile_2/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_2/self_attention/ExpandDims_1"
  input: "decoder/num_blocks_2/self_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ones_like_2/Shape"
  op: "Shape"
  input: "decoder/num_blocks_2/self_attention/Tile_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ones_like_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ones_like_2"
  op: "Fill"
  input: "decoder/num_blocks_2/self_attention/ones_like_2/Shape"
  input: "decoder/num_blocks_2/self_attention/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/ones_like_2"
  input: "decoder/num_blocks_2/self_attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Equal_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Equal_1"
  op: "Equal"
  input: "decoder/num_blocks_2/self_attention/Tile_2"
  input: "decoder/num_blocks_2/self_attention/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Select_1"
  op: "Select"
  input: "decoder/num_blocks_2/self_attention/Equal_1"
  input: "decoder/num_blocks_2/self_attention/mul_1"
  input: "decoder/num_blocks_2/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_2/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Shape_3"
  op: "Shape"
  input: "decoder/num_blocks_2/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_2/self_attention/Rank"
  input: "decoder/num_blocks_2/self_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_2/self_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_2/self_attention/Shape_3"
  input: "decoder/num_blocks_2/self_attention/Slice/begin"
  input: "decoder/num_blocks_2/self_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/concat_3/values_0"
  input: "decoder/num_blocks_2/self_attention/Slice"
  input: "decoder/num_blocks_2/self_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/Select_1"
  input: "decoder/num_blocks_2/self_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_2/self_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_2/self_attention/Softmax"
  input: "decoder/num_blocks_2/self_attention/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_2/self_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_2/self_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_2/self_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_3/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_2/self_attention/Sign_1"
  input: "decoder/num_blocks_2/self_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ExpandDims_2"
  op: "ExpandDims"
  input: "decoder/num_blocks_2/self_attention/Tile_3"
  input: "decoder/num_blocks_2/self_attention/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Shape_4"
  op: "Shape"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/strided_slice_3"
  op: "StridedSlice"
  input: "decoder/num_blocks_2/self_attention/Shape_4"
  input: "decoder/num_blocks_2/self_attention/strided_slice_3/stack"
  input: "decoder/num_blocks_2/self_attention/strided_slice_3/stack_1"
  input: "decoder/num_blocks_2/self_attention/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_4/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_4/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_4/multiples"
  op: "Pack"
  input: "decoder/num_blocks_2/self_attention/Tile_4/multiples/0"
  input: "decoder/num_blocks_2/self_attention/Tile_4/multiples/1"
  input: "decoder/num_blocks_2/self_attention/strided_slice_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Tile_4"
  op: "Tile"
  input: "decoder/num_blocks_2/self_attention/ExpandDims_2"
  input: "decoder/num_blocks_2/self_attention/Tile_4/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/mul_2"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/Reshape_1"
  input: "decoder/num_blocks_2/self_attention/Tile_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_2/self_attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_2/self_attention/dropout/Identity"
  input: "decoder/num_blocks_2/self_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_2/self_attention/split_3/split_dim"
  input: "decoder/num_blocks_2/self_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/self_attention/split_3"
  input: "decoder/num_blocks_2/self_attention/split_3:1"
  input: "decoder/num_blocks_2/self_attention/split_3:2"
  input: "decoder/num_blocks_2/self_attention/split_3:3"
  input: "decoder/num_blocks_2/self_attention/split_3:4"
  input: "decoder/num_blocks_2/self_attention/split_3:5"
  input: "decoder/num_blocks_2/self_attention/split_3:6"
  input: "decoder/num_blocks_2/self_attention/split_3:7"
  input: "decoder/num_blocks_2/self_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/add"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/concat_4"
  input: "decoder/num_blocks_1/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_2/self_attention/add"
  input: "decoder/num_blocks_2/self_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_2/self_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_2/self_attention/add"
  input: "decoder/num_blocks_2/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_2/self_attention/ln/moments/Sub"
  input: "decoder/num_blocks_2/self_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_2/self_attention/add"
  input: "decoder/num_blocks_2/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_2/self_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_2/self_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_2/self_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_2/self_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_2/self_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_2/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/self_attention/ln/Variable"
  input: "decoder/num_blocks_2/self_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_2/self_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/self_attention/ln/Variable_1"
  input: "decoder/num_blocks_2/self_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_2/self_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/self_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/self_attention/add"
  input: "decoder/num_blocks_2/self_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/ln/moments/variance"
  input: "decoder/num_blocks_2/self_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_2/self_attention/ln/add"
  input: "decoder/num_blocks_2/self_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_2/self_attention/ln/sub"
  input: "decoder/num_blocks_2/self_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/self_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_2/self_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/self_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_2/self_attention/ln/mul"
  input: "decoder/num_blocks_2/self_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/vanilla_attention/dense/bias"
  input: "decoder/num_blocks_2/vanilla_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_2/vanilla_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_2/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_2/self_attention/ln/add_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_2/vanilla_attention/dense/kernel/read"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Tensordot"
  input: "decoder/num_blocks_2/vanilla_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_2/vanilla_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/bias"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_2/vanilla_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/bias"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/split"
  op: "Split"
  input: "decoder/num_blocks_2/vanilla_attention/split/split_dim"
  input: "decoder/num_blocks_2/vanilla_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/split"
  input: "decoder/num_blocks_2/vanilla_attention/split:1"
  input: "decoder/num_blocks_2/vanilla_attention/split:2"
  input: "decoder/num_blocks_2/vanilla_attention/split:3"
  input: "decoder/num_blocks_2/vanilla_attention/split:4"
  input: "decoder/num_blocks_2/vanilla_attention/split:5"
  input: "decoder/num_blocks_2/vanilla_attention/split:6"
  input: "decoder/num_blocks_2/vanilla_attention/split:7"
  input: "decoder/num_blocks_2/vanilla_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_2/vanilla_attention/split_1/split_dim"
  input: "decoder/num_blocks_2/vanilla_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/split_1"
  input: "decoder/num_blocks_2/vanilla_attention/split_1:1"
  input: "decoder/num_blocks_2/vanilla_attention/split_1:2"
  input: "decoder/num_blocks_2/vanilla_attention/split_1:3"
  input: "decoder/num_blocks_2/vanilla_attention/split_1:4"
  input: "decoder/num_blocks_2/vanilla_attention/split_1:5"
  input: "decoder/num_blocks_2/vanilla_attention/split_1:6"
  input: "decoder/num_blocks_2/vanilla_attention/split_1:7"
  input: "decoder/num_blocks_2/vanilla_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_2/vanilla_attention/split_2/split_dim"
  input: "decoder/num_blocks_2/vanilla_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/split_2"
  input: "decoder/num_blocks_2/vanilla_attention/split_2:1"
  input: "decoder/num_blocks_2/vanilla_attention/split_2:2"
  input: "decoder/num_blocks_2/vanilla_attention/split_2:3"
  input: "decoder/num_blocks_2/vanilla_attention/split_2:4"
  input: "decoder/num_blocks_2/vanilla_attention/split_2:5"
  input: "decoder/num_blocks_2/vanilla_attention/split_2:6"
  input: "decoder/num_blocks_2/vanilla_attention/split_2:7"
  input: "decoder/num_blocks_2/vanilla_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_2/vanilla_attention/concat_1"
  input: "decoder/num_blocks_2/vanilla_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_2/vanilla_attention/concat"
  input: "decoder/num_blocks_2/vanilla_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_2/vanilla_attention/MatMul"
  input: "decoder/num_blocks_2/vanilla_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_2/vanilla_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_2/vanilla_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_2/vanilla_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_2/vanilla_attention/Sign"
  input: "decoder/num_blocks_2/vanilla_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_2/vanilla_attention/Tile"
  input: "decoder/num_blocks_2/vanilla_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_2/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_2/vanilla_attention/Shape"
  input: "decoder/num_blocks_2/vanilla_attention/strided_slice/stack"
  input: "decoder/num_blocks_2/vanilla_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_2/vanilla_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_2/vanilla_attention/strided_slice"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_2/vanilla_attention/ExpandDims"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_2/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_2/vanilla_attention/ones_like/Shape"
  input: "decoder/num_blocks_2/vanilla_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/ones_like"
  input: "decoder/num_blocks_2/vanilla_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_1"
  input: "decoder/num_blocks_2/vanilla_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_2/vanilla_attention/Equal"
  input: "decoder/num_blocks_2/vanilla_attention/mul"
  input: "decoder/num_blocks_2/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_2/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_2/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_2/vanilla_attention/Rank"
  input: "decoder/num_blocks_2/vanilla_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_2/vanilla_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_2/vanilla_attention/Shape_2"
  input: "decoder/num_blocks_2/vanilla_attention/Slice/begin"
  input: "decoder/num_blocks_2/vanilla_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/concat_3/values_0"
  input: "decoder/num_blocks_2/vanilla_attention/Slice"
  input: "decoder/num_blocks_2/vanilla_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/Select"
  input: "decoder/num_blocks_2/vanilla_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_2/vanilla_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_2/vanilla_attention/Softmax"
  input: "decoder/num_blocks_2/vanilla_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_2/self_attention/ln/add_1"
  input: "decoder/num_blocks_2/vanilla_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_2/vanilla_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_2/vanilla_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_2/vanilla_attention/Sign_1"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_2"
  input: "decoder/num_blocks_2/vanilla_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_2/vanilla_attention/Shape_3"
  input: "decoder/num_blocks_2/vanilla_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_2/vanilla_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_2/vanilla_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_3/multiples"
  op: "Pack"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_3/multiples/0"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_3/multiples/1"
  input: "decoder/num_blocks_2/vanilla_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_2/vanilla_attention/ExpandDims_1"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/Reshape_1"
  input: "decoder/num_blocks_2/vanilla_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_2/vanilla_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_2/vanilla_attention/dropout/Identity"
  input: "decoder/num_blocks_2/vanilla_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_2/vanilla_attention/split_3/split_dim"
  input: "decoder/num_blocks_2/vanilla_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_2/vanilla_attention/split_3"
  input: "decoder/num_blocks_2/vanilla_attention/split_3:1"
  input: "decoder/num_blocks_2/vanilla_attention/split_3:2"
  input: "decoder/num_blocks_2/vanilla_attention/split_3:3"
  input: "decoder/num_blocks_2/vanilla_attention/split_3:4"
  input: "decoder/num_blocks_2/vanilla_attention/split_3:5"
  input: "decoder/num_blocks_2/vanilla_attention/split_3:6"
  input: "decoder/num_blocks_2/vanilla_attention/split_3:7"
  input: "decoder/num_blocks_2/vanilla_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/add"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/concat_4"
  input: "decoder/num_blocks_2/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_2/vanilla_attention/add"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_2/vanilla_attention/add"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/Sub"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_2/vanilla_attention/add"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/vanilla_attention/ln/Variable"
  input: "decoder/num_blocks_2/vanilla_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_2/vanilla_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/vanilla_attention/ln/Variable_1"
  input: "decoder/num_blocks_2/vanilla_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_2/vanilla_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/vanilla_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/vanilla_attention/add"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/ln/moments/variance"
  input: "decoder/num_blocks_2/vanilla_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_2/vanilla_attention/ln/add"
  input: "decoder/num_blocks_2/vanilla_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_2/vanilla_attention/ln/sub"
  input: "decoder/num_blocks_2/vanilla_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/vanilla_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_2/vanilla_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/vanilla_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_2/vanilla_attention/ln/mul"
  input: "decoder/num_blocks_2/vanilla_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/bias"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_2/vanilla_attention/ln/add_1"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/kernel/read"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/ExpandDims"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/convolution/Squeeze"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d/Relu"
  op: "Relu"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/bias"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_2/multihead_attention/conv1d/Relu"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/kernel/read"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/ExpandDims"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_2/convolution/Squeeze"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/add"
  op: "Add"
  input: "decoder/num_blocks_2/multihead_attention/conv1d_2/BiasAdd"
  input: "decoder/num_blocks_2/vanilla_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_2/multihead_attention/add"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_2/multihead_attention/add"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/Sub"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_2/multihead_attention/add"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/multihead_attention/ln/Variable"
  input: "decoder/num_blocks_2/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_2/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_2/multihead_attention/ln/Variable_1"
  input: "decoder/num_blocks_2/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_2/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_2/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_2/multihead_attention/add"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_2/multihead_attention/ln/moments/variance"
  input: "decoder/num_blocks_2/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_2/multihead_attention/ln/add"
  input: "decoder/num_blocks_2/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_2/multihead_attention/ln/sub"
  input: "decoder/num_blocks_2/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_2/multihead_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_2/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_2/multihead_attention/ln/mul"
  input: "decoder/num_blocks_2/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/self_attention/dense/kernel"
  input: "decoder/num_blocks_3/self_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_3/self_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/self_attention/dense/bias"
  input: "decoder/num_blocks_3/self_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_3/self_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_3/self_attention/dense/kernel/read"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_3/self_attention/dense/Tensordot"
  input: "decoder/num_blocks_3/self_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_3/self_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/self_attention/dense_1/bias"
  input: "decoder/num_blocks_3/self_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_3/self_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_3/self_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_3/self_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_3/self_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_3/self_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/self_attention/dense_2/bias"
  input: "decoder/num_blocks_3/self_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_3/self_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_3/self_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_3/self_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_3/self_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_3/self_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/split"
  op: "Split"
  input: "decoder/num_blocks_3/self_attention/split/split_dim"
  input: "decoder/num_blocks_3/self_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/split"
  input: "decoder/num_blocks_3/self_attention/split:1"
  input: "decoder/num_blocks_3/self_attention/split:2"
  input: "decoder/num_blocks_3/self_attention/split:3"
  input: "decoder/num_blocks_3/self_attention/split:4"
  input: "decoder/num_blocks_3/self_attention/split:5"
  input: "decoder/num_blocks_3/self_attention/split:6"
  input: "decoder/num_blocks_3/self_attention/split:7"
  input: "decoder/num_blocks_3/self_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_3/self_attention/split_1/split_dim"
  input: "decoder/num_blocks_3/self_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/split_1"
  input: "decoder/num_blocks_3/self_attention/split_1:1"
  input: "decoder/num_blocks_3/self_attention/split_1:2"
  input: "decoder/num_blocks_3/self_attention/split_1:3"
  input: "decoder/num_blocks_3/self_attention/split_1:4"
  input: "decoder/num_blocks_3/self_attention/split_1:5"
  input: "decoder/num_blocks_3/self_attention/split_1:6"
  input: "decoder/num_blocks_3/self_attention/split_1:7"
  input: "decoder/num_blocks_3/self_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_3/self_attention/split_2/split_dim"
  input: "decoder/num_blocks_3/self_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/split_2"
  input: "decoder/num_blocks_3/self_attention/split_2:1"
  input: "decoder/num_blocks_3/self_attention/split_2:2"
  input: "decoder/num_blocks_3/self_attention/split_2:3"
  input: "decoder/num_blocks_3/self_attention/split_2:4"
  input: "decoder/num_blocks_3/self_attention/split_2:5"
  input: "decoder/num_blocks_3/self_attention/split_2:6"
  input: "decoder/num_blocks_3/self_attention/split_2:7"
  input: "decoder/num_blocks_3/self_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_3/self_attention/concat_1"
  input: "decoder/num_blocks_3/self_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_3/self_attention/concat"
  input: "decoder/num_blocks_3/self_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_3/self_attention/MatMul"
  input: "decoder/num_blocks_3/self_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Sum"
  op: "Sum"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_3/self_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_3/self_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_3/self_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_3/self_attention/Sign"
  input: "decoder/num_blocks_3/self_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_3/self_attention/Tile"
  input: "decoder/num_blocks_3/self_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_3/self_attention/Shape"
  input: "decoder/num_blocks_3/self_attention/strided_slice/stack"
  input: "decoder/num_blocks_3/self_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_3/self_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_3/self_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_3/self_attention/strided_slice"
  input: "decoder/num_blocks_3/self_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_3/self_attention/ExpandDims"
  input: "decoder/num_blocks_3/self_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_3/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_3/self_attention/ones_like/Shape"
  input: "decoder/num_blocks_3/self_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/ones_like"
  input: "decoder/num_blocks_3/self_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_3/self_attention/Tile_1"
  input: "decoder/num_blocks_3/self_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_3/self_attention/Equal"
  input: "decoder/num_blocks_3/self_attention/mul"
  input: "decoder/num_blocks_3/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_3/self_attention/Select"
  input: "decoder/num_blocks_3/self_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_3/self_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_3/self_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ones_like_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000#\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ones_like_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ones_like_1"
  op: "Fill"
  input: "decoder/num_blocks_3/self_attention/ones_like_1/Shape"
  input: "decoder/num_blocks_3/self_attention/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/LinearOperatorTriL/MatrixBandPart"
  op: "MatrixBandPart"
  input: "decoder/num_blocks_3/self_attention/ones_like_1"
  input: "decoder/num_blocks_3/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  input: "decoder/num_blocks_3/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/LinearOperatorTriL/MatrixDiagPart"
  op: "MatrixDiagPart"
  input: "decoder/num_blocks_3/self_attention/LinearOperatorTriL/MatrixBandPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_3/self_attention/LinearOperatorTriL/MatrixBandPart"
  input: "decoder/num_blocks_3/self_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_3/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_2"
  op: "StridedSlice"
  input: "decoder/num_blocks_3/self_attention/Shape_1"
  input: "decoder/num_blocks_3/self_attention/strided_slice_2/stack"
  input: "decoder/num_blocks_3/self_attention/strided_slice_2/stack_1"
  input: "decoder/num_blocks_3/self_attention/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_2/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_2/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_2/multiples"
  op: "Pack"
  input: "decoder/num_blocks_3/self_attention/strided_slice_2"
  input: "decoder/num_blocks_3/self_attention/Tile_2/multiples/1"
  input: "decoder/num_blocks_3/self_attention/Tile_2/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_3/self_attention/ExpandDims_1"
  input: "decoder/num_blocks_3/self_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ones_like_2/Shape"
  op: "Shape"
  input: "decoder/num_blocks_3/self_attention/Tile_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ones_like_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ones_like_2"
  op: "Fill"
  input: "decoder/num_blocks_3/self_attention/ones_like_2/Shape"
  input: "decoder/num_blocks_3/self_attention/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/ones_like_2"
  input: "decoder/num_blocks_3/self_attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Equal_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Equal_1"
  op: "Equal"
  input: "decoder/num_blocks_3/self_attention/Tile_2"
  input: "decoder/num_blocks_3/self_attention/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Select_1"
  op: "Select"
  input: "decoder/num_blocks_3/self_attention/Equal_1"
  input: "decoder/num_blocks_3/self_attention/mul_1"
  input: "decoder/num_blocks_3/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_3/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Shape_3"
  op: "Shape"
  input: "decoder/num_blocks_3/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_3/self_attention/Rank"
  input: "decoder/num_blocks_3/self_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_3/self_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_3/self_attention/Shape_3"
  input: "decoder/num_blocks_3/self_attention/Slice/begin"
  input: "decoder/num_blocks_3/self_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/concat_3/values_0"
  input: "decoder/num_blocks_3/self_attention/Slice"
  input: "decoder/num_blocks_3/self_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/Select_1"
  input: "decoder/num_blocks_3/self_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_3/self_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_3/self_attention/Softmax"
  input: "decoder/num_blocks_3/self_attention/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_3/self_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_3/self_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_3/self_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_3/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_3/self_attention/Sign_1"
  input: "decoder/num_blocks_3/self_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ExpandDims_2"
  op: "ExpandDims"
  input: "decoder/num_blocks_3/self_attention/Tile_3"
  input: "decoder/num_blocks_3/self_attention/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Shape_4"
  op: "Shape"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/strided_slice_3"
  op: "StridedSlice"
  input: "decoder/num_blocks_3/self_attention/Shape_4"
  input: "decoder/num_blocks_3/self_attention/strided_slice_3/stack"
  input: "decoder/num_blocks_3/self_attention/strided_slice_3/stack_1"
  input: "decoder/num_blocks_3/self_attention/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_4/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_4/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_4/multiples"
  op: "Pack"
  input: "decoder/num_blocks_3/self_attention/Tile_4/multiples/0"
  input: "decoder/num_blocks_3/self_attention/Tile_4/multiples/1"
  input: "decoder/num_blocks_3/self_attention/strided_slice_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Tile_4"
  op: "Tile"
  input: "decoder/num_blocks_3/self_attention/ExpandDims_2"
  input: "decoder/num_blocks_3/self_attention/Tile_4/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/mul_2"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/Reshape_1"
  input: "decoder/num_blocks_3/self_attention/Tile_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_3/self_attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_3/self_attention/dropout/Identity"
  input: "decoder/num_blocks_3/self_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_3/self_attention/split_3/split_dim"
  input: "decoder/num_blocks_3/self_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/self_attention/split_3"
  input: "decoder/num_blocks_3/self_attention/split_3:1"
  input: "decoder/num_blocks_3/self_attention/split_3:2"
  input: "decoder/num_blocks_3/self_attention/split_3:3"
  input: "decoder/num_blocks_3/self_attention/split_3:4"
  input: "decoder/num_blocks_3/self_attention/split_3:5"
  input: "decoder/num_blocks_3/self_attention/split_3:6"
  input: "decoder/num_blocks_3/self_attention/split_3:7"
  input: "decoder/num_blocks_3/self_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/add"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/concat_4"
  input: "decoder/num_blocks_2/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_3/self_attention/add"
  input: "decoder/num_blocks_3/self_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_3/self_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_3/self_attention/add"
  input: "decoder/num_blocks_3/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_3/self_attention/ln/moments/Sub"
  input: "decoder/num_blocks_3/self_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_3/self_attention/add"
  input: "decoder/num_blocks_3/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_3/self_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_3/self_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_3/self_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_3/self_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_3/self_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_3/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/self_attention/ln/Variable"
  input: "decoder/num_blocks_3/self_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_3/self_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/self_attention/ln/Variable_1"
  input: "decoder/num_blocks_3/self_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_3/self_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/self_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/self_attention/add"
  input: "decoder/num_blocks_3/self_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/ln/moments/variance"
  input: "decoder/num_blocks_3/self_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_3/self_attention/ln/add"
  input: "decoder/num_blocks_3/self_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_3/self_attention/ln/sub"
  input: "decoder/num_blocks_3/self_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/self_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_3/self_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/self_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_3/self_attention/ln/mul"
  input: "decoder/num_blocks_3/self_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/vanilla_attention/dense/bias"
  input: "decoder/num_blocks_3/vanilla_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_3/vanilla_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_3/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_3/self_attention/ln/add_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_3/vanilla_attention/dense/kernel/read"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Tensordot"
  input: "decoder/num_blocks_3/vanilla_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_3/vanilla_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/bias"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_3/vanilla_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/bias"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/split"
  op: "Split"
  input: "decoder/num_blocks_3/vanilla_attention/split/split_dim"
  input: "decoder/num_blocks_3/vanilla_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/split"
  input: "decoder/num_blocks_3/vanilla_attention/split:1"
  input: "decoder/num_blocks_3/vanilla_attention/split:2"
  input: "decoder/num_blocks_3/vanilla_attention/split:3"
  input: "decoder/num_blocks_3/vanilla_attention/split:4"
  input: "decoder/num_blocks_3/vanilla_attention/split:5"
  input: "decoder/num_blocks_3/vanilla_attention/split:6"
  input: "decoder/num_blocks_3/vanilla_attention/split:7"
  input: "decoder/num_blocks_3/vanilla_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_3/vanilla_attention/split_1/split_dim"
  input: "decoder/num_blocks_3/vanilla_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/split_1"
  input: "decoder/num_blocks_3/vanilla_attention/split_1:1"
  input: "decoder/num_blocks_3/vanilla_attention/split_1:2"
  input: "decoder/num_blocks_3/vanilla_attention/split_1:3"
  input: "decoder/num_blocks_3/vanilla_attention/split_1:4"
  input: "decoder/num_blocks_3/vanilla_attention/split_1:5"
  input: "decoder/num_blocks_3/vanilla_attention/split_1:6"
  input: "decoder/num_blocks_3/vanilla_attention/split_1:7"
  input: "decoder/num_blocks_3/vanilla_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_3/vanilla_attention/split_2/split_dim"
  input: "decoder/num_blocks_3/vanilla_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/split_2"
  input: "decoder/num_blocks_3/vanilla_attention/split_2:1"
  input: "decoder/num_blocks_3/vanilla_attention/split_2:2"
  input: "decoder/num_blocks_3/vanilla_attention/split_2:3"
  input: "decoder/num_blocks_3/vanilla_attention/split_2:4"
  input: "decoder/num_blocks_3/vanilla_attention/split_2:5"
  input: "decoder/num_blocks_3/vanilla_attention/split_2:6"
  input: "decoder/num_blocks_3/vanilla_attention/split_2:7"
  input: "decoder/num_blocks_3/vanilla_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_3/vanilla_attention/concat_1"
  input: "decoder/num_blocks_3/vanilla_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_3/vanilla_attention/concat"
  input: "decoder/num_blocks_3/vanilla_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_3/vanilla_attention/MatMul"
  input: "decoder/num_blocks_3/vanilla_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_3/vanilla_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_3/vanilla_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_3/vanilla_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_3/vanilla_attention/Sign"
  input: "decoder/num_blocks_3/vanilla_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_3/vanilla_attention/Tile"
  input: "decoder/num_blocks_3/vanilla_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_3/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_3/vanilla_attention/Shape"
  input: "decoder/num_blocks_3/vanilla_attention/strided_slice/stack"
  input: "decoder/num_blocks_3/vanilla_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_3/vanilla_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_3/vanilla_attention/strided_slice"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_3/vanilla_attention/ExpandDims"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_3/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_3/vanilla_attention/ones_like/Shape"
  input: "decoder/num_blocks_3/vanilla_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/ones_like"
  input: "decoder/num_blocks_3/vanilla_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_1"
  input: "decoder/num_blocks_3/vanilla_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_3/vanilla_attention/Equal"
  input: "decoder/num_blocks_3/vanilla_attention/mul"
  input: "decoder/num_blocks_3/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_3/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_3/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_3/vanilla_attention/Rank"
  input: "decoder/num_blocks_3/vanilla_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_3/vanilla_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_3/vanilla_attention/Shape_2"
  input: "decoder/num_blocks_3/vanilla_attention/Slice/begin"
  input: "decoder/num_blocks_3/vanilla_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/concat_3/values_0"
  input: "decoder/num_blocks_3/vanilla_attention/Slice"
  input: "decoder/num_blocks_3/vanilla_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/Select"
  input: "decoder/num_blocks_3/vanilla_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_3/vanilla_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_3/vanilla_attention/Softmax"
  input: "decoder/num_blocks_3/vanilla_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_3/self_attention/ln/add_1"
  input: "decoder/num_blocks_3/vanilla_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_3/vanilla_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_3/vanilla_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_3/vanilla_attention/Sign_1"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_2"
  input: "decoder/num_blocks_3/vanilla_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_3/vanilla_attention/Shape_3"
  input: "decoder/num_blocks_3/vanilla_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_3/vanilla_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_3/vanilla_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_3/multiples"
  op: "Pack"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_3/multiples/0"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_3/multiples/1"
  input: "decoder/num_blocks_3/vanilla_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_3/vanilla_attention/ExpandDims_1"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/Reshape_1"
  input: "decoder/num_blocks_3/vanilla_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_3/vanilla_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_3/vanilla_attention/dropout/Identity"
  input: "decoder/num_blocks_3/vanilla_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_3/vanilla_attention/split_3/split_dim"
  input: "decoder/num_blocks_3/vanilla_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_3/vanilla_attention/split_3"
  input: "decoder/num_blocks_3/vanilla_attention/split_3:1"
  input: "decoder/num_blocks_3/vanilla_attention/split_3:2"
  input: "decoder/num_blocks_3/vanilla_attention/split_3:3"
  input: "decoder/num_blocks_3/vanilla_attention/split_3:4"
  input: "decoder/num_blocks_3/vanilla_attention/split_3:5"
  input: "decoder/num_blocks_3/vanilla_attention/split_3:6"
  input: "decoder/num_blocks_3/vanilla_attention/split_3:7"
  input: "decoder/num_blocks_3/vanilla_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/add"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/concat_4"
  input: "decoder/num_blocks_3/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_3/vanilla_attention/add"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_3/vanilla_attention/add"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/Sub"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_3/vanilla_attention/add"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/vanilla_attention/ln/Variable"
  input: "decoder/num_blocks_3/vanilla_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_3/vanilla_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/vanilla_attention/ln/Variable_1"
  input: "decoder/num_blocks_3/vanilla_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_3/vanilla_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/vanilla_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/vanilla_attention/add"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/ln/moments/variance"
  input: "decoder/num_blocks_3/vanilla_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_3/vanilla_attention/ln/add"
  input: "decoder/num_blocks_3/vanilla_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_3/vanilla_attention/ln/sub"
  input: "decoder/num_blocks_3/vanilla_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/vanilla_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_3/vanilla_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/vanilla_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_3/vanilla_attention/ln/mul"
  input: "decoder/num_blocks_3/vanilla_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/bias"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_3/vanilla_attention/ln/add_1"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/kernel/read"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/ExpandDims"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/convolution/Squeeze"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d/Relu"
  op: "Relu"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/bias"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_3/multihead_attention/conv1d/Relu"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/kernel/read"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/ExpandDims"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_2/convolution/Squeeze"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/add"
  op: "Add"
  input: "decoder/num_blocks_3/multihead_attention/conv1d_2/BiasAdd"
  input: "decoder/num_blocks_3/vanilla_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_3/multihead_attention/add"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_3/multihead_attention/add"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/Sub"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_3/multihead_attention/add"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/multihead_attention/ln/Variable"
  input: "decoder/num_blocks_3/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_3/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_3/multihead_attention/ln/Variable_1"
  input: "decoder/num_blocks_3/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_3/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_3/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_3/multihead_attention/add"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_3/multihead_attention/ln/moments/variance"
  input: "decoder/num_blocks_3/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_3/multihead_attention/ln/add"
  input: "decoder/num_blocks_3/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_3/multihead_attention/ln/sub"
  input: "decoder/num_blocks_3/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_3/multihead_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_3/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_3/multihead_attention/ln/mul"
  input: "decoder/num_blocks_3/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/self_attention/dense/kernel"
  input: "decoder/num_blocks_4/self_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_4/self_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/self_attention/dense/bias"
  input: "decoder/num_blocks_4/self_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_4/self_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_4/self_attention/dense/kernel/read"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_4/self_attention/dense/Tensordot"
  input: "decoder/num_blocks_4/self_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_4/self_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/self_attention/dense_1/bias"
  input: "decoder/num_blocks_4/self_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_4/self_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_4/self_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_4/self_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_4/self_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_4/self_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/self_attention/dense_2/bias"
  input: "decoder/num_blocks_4/self_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_4/self_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_4/self_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_4/self_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_4/self_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_4/self_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/split"
  op: "Split"
  input: "decoder/num_blocks_4/self_attention/split/split_dim"
  input: "decoder/num_blocks_4/self_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/split"
  input: "decoder/num_blocks_4/self_attention/split:1"
  input: "decoder/num_blocks_4/self_attention/split:2"
  input: "decoder/num_blocks_4/self_attention/split:3"
  input: "decoder/num_blocks_4/self_attention/split:4"
  input: "decoder/num_blocks_4/self_attention/split:5"
  input: "decoder/num_blocks_4/self_attention/split:6"
  input: "decoder/num_blocks_4/self_attention/split:7"
  input: "decoder/num_blocks_4/self_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_4/self_attention/split_1/split_dim"
  input: "decoder/num_blocks_4/self_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/split_1"
  input: "decoder/num_blocks_4/self_attention/split_1:1"
  input: "decoder/num_blocks_4/self_attention/split_1:2"
  input: "decoder/num_blocks_4/self_attention/split_1:3"
  input: "decoder/num_blocks_4/self_attention/split_1:4"
  input: "decoder/num_blocks_4/self_attention/split_1:5"
  input: "decoder/num_blocks_4/self_attention/split_1:6"
  input: "decoder/num_blocks_4/self_attention/split_1:7"
  input: "decoder/num_blocks_4/self_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_4/self_attention/split_2/split_dim"
  input: "decoder/num_blocks_4/self_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/split_2"
  input: "decoder/num_blocks_4/self_attention/split_2:1"
  input: "decoder/num_blocks_4/self_attention/split_2:2"
  input: "decoder/num_blocks_4/self_attention/split_2:3"
  input: "decoder/num_blocks_4/self_attention/split_2:4"
  input: "decoder/num_blocks_4/self_attention/split_2:5"
  input: "decoder/num_blocks_4/self_attention/split_2:6"
  input: "decoder/num_blocks_4/self_attention/split_2:7"
  input: "decoder/num_blocks_4/self_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_4/self_attention/concat_1"
  input: "decoder/num_blocks_4/self_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_4/self_attention/concat"
  input: "decoder/num_blocks_4/self_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_4/self_attention/MatMul"
  input: "decoder/num_blocks_4/self_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Sum"
  op: "Sum"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_4/self_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_4/self_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_4/self_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_4/self_attention/Sign"
  input: "decoder/num_blocks_4/self_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_4/self_attention/Tile"
  input: "decoder/num_blocks_4/self_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_4/self_attention/Shape"
  input: "decoder/num_blocks_4/self_attention/strided_slice/stack"
  input: "decoder/num_blocks_4/self_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_4/self_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_4/self_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_4/self_attention/strided_slice"
  input: "decoder/num_blocks_4/self_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_4/self_attention/ExpandDims"
  input: "decoder/num_blocks_4/self_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_4/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_4/self_attention/ones_like/Shape"
  input: "decoder/num_blocks_4/self_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/ones_like"
  input: "decoder/num_blocks_4/self_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_4/self_attention/Tile_1"
  input: "decoder/num_blocks_4/self_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_4/self_attention/Equal"
  input: "decoder/num_blocks_4/self_attention/mul"
  input: "decoder/num_blocks_4/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_4/self_attention/Select"
  input: "decoder/num_blocks_4/self_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_4/self_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_4/self_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ones_like_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000#\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ones_like_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ones_like_1"
  op: "Fill"
  input: "decoder/num_blocks_4/self_attention/ones_like_1/Shape"
  input: "decoder/num_blocks_4/self_attention/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/LinearOperatorTriL/MatrixBandPart"
  op: "MatrixBandPart"
  input: "decoder/num_blocks_4/self_attention/ones_like_1"
  input: "decoder/num_blocks_4/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  input: "decoder/num_blocks_4/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/LinearOperatorTriL/MatrixDiagPart"
  op: "MatrixDiagPart"
  input: "decoder/num_blocks_4/self_attention/LinearOperatorTriL/MatrixBandPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_4/self_attention/LinearOperatorTriL/MatrixBandPart"
  input: "decoder/num_blocks_4/self_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_4/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_2"
  op: "StridedSlice"
  input: "decoder/num_blocks_4/self_attention/Shape_1"
  input: "decoder/num_blocks_4/self_attention/strided_slice_2/stack"
  input: "decoder/num_blocks_4/self_attention/strided_slice_2/stack_1"
  input: "decoder/num_blocks_4/self_attention/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_2/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_2/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_2/multiples"
  op: "Pack"
  input: "decoder/num_blocks_4/self_attention/strided_slice_2"
  input: "decoder/num_blocks_4/self_attention/Tile_2/multiples/1"
  input: "decoder/num_blocks_4/self_attention/Tile_2/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_4/self_attention/ExpandDims_1"
  input: "decoder/num_blocks_4/self_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ones_like_2/Shape"
  op: "Shape"
  input: "decoder/num_blocks_4/self_attention/Tile_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ones_like_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ones_like_2"
  op: "Fill"
  input: "decoder/num_blocks_4/self_attention/ones_like_2/Shape"
  input: "decoder/num_blocks_4/self_attention/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/ones_like_2"
  input: "decoder/num_blocks_4/self_attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Equal_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Equal_1"
  op: "Equal"
  input: "decoder/num_blocks_4/self_attention/Tile_2"
  input: "decoder/num_blocks_4/self_attention/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Select_1"
  op: "Select"
  input: "decoder/num_blocks_4/self_attention/Equal_1"
  input: "decoder/num_blocks_4/self_attention/mul_1"
  input: "decoder/num_blocks_4/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_4/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Shape_3"
  op: "Shape"
  input: "decoder/num_blocks_4/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_4/self_attention/Rank"
  input: "decoder/num_blocks_4/self_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_4/self_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_4/self_attention/Shape_3"
  input: "decoder/num_blocks_4/self_attention/Slice/begin"
  input: "decoder/num_blocks_4/self_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/concat_3/values_0"
  input: "decoder/num_blocks_4/self_attention/Slice"
  input: "decoder/num_blocks_4/self_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/Select_1"
  input: "decoder/num_blocks_4/self_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_4/self_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_4/self_attention/Softmax"
  input: "decoder/num_blocks_4/self_attention/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_4/self_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_4/self_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_4/self_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_3/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_4/self_attention/Sign_1"
  input: "decoder/num_blocks_4/self_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ExpandDims_2"
  op: "ExpandDims"
  input: "decoder/num_blocks_4/self_attention/Tile_3"
  input: "decoder/num_blocks_4/self_attention/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Shape_4"
  op: "Shape"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/strided_slice_3"
  op: "StridedSlice"
  input: "decoder/num_blocks_4/self_attention/Shape_4"
  input: "decoder/num_blocks_4/self_attention/strided_slice_3/stack"
  input: "decoder/num_blocks_4/self_attention/strided_slice_3/stack_1"
  input: "decoder/num_blocks_4/self_attention/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_4/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_4/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_4/multiples"
  op: "Pack"
  input: "decoder/num_blocks_4/self_attention/Tile_4/multiples/0"
  input: "decoder/num_blocks_4/self_attention/Tile_4/multiples/1"
  input: "decoder/num_blocks_4/self_attention/strided_slice_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Tile_4"
  op: "Tile"
  input: "decoder/num_blocks_4/self_attention/ExpandDims_2"
  input: "decoder/num_blocks_4/self_attention/Tile_4/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/mul_2"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/Reshape_1"
  input: "decoder/num_blocks_4/self_attention/Tile_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_4/self_attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_4/self_attention/dropout/Identity"
  input: "decoder/num_blocks_4/self_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_4/self_attention/split_3/split_dim"
  input: "decoder/num_blocks_4/self_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/self_attention/split_3"
  input: "decoder/num_blocks_4/self_attention/split_3:1"
  input: "decoder/num_blocks_4/self_attention/split_3:2"
  input: "decoder/num_blocks_4/self_attention/split_3:3"
  input: "decoder/num_blocks_4/self_attention/split_3:4"
  input: "decoder/num_blocks_4/self_attention/split_3:5"
  input: "decoder/num_blocks_4/self_attention/split_3:6"
  input: "decoder/num_blocks_4/self_attention/split_3:7"
  input: "decoder/num_blocks_4/self_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/add"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/concat_4"
  input: "decoder/num_blocks_3/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_4/self_attention/add"
  input: "decoder/num_blocks_4/self_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_4/self_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_4/self_attention/add"
  input: "decoder/num_blocks_4/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_4/self_attention/ln/moments/Sub"
  input: "decoder/num_blocks_4/self_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_4/self_attention/add"
  input: "decoder/num_blocks_4/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_4/self_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_4/self_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_4/self_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_4/self_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_4/self_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_4/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/self_attention/ln/Variable"
  input: "decoder/num_blocks_4/self_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_4/self_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/self_attention/ln/Variable_1"
  input: "decoder/num_blocks_4/self_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_4/self_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/self_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/self_attention/add"
  input: "decoder/num_blocks_4/self_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/ln/moments/variance"
  input: "decoder/num_blocks_4/self_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_4/self_attention/ln/add"
  input: "decoder/num_blocks_4/self_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_4/self_attention/ln/sub"
  input: "decoder/num_blocks_4/self_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/self_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_4/self_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/self_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_4/self_attention/ln/mul"
  input: "decoder/num_blocks_4/self_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/vanilla_attention/dense/bias"
  input: "decoder/num_blocks_4/vanilla_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_4/vanilla_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_4/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_4/self_attention/ln/add_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_4/vanilla_attention/dense/kernel/read"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Tensordot"
  input: "decoder/num_blocks_4/vanilla_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_4/vanilla_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/bias"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_4/vanilla_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/bias"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/split"
  op: "Split"
  input: "decoder/num_blocks_4/vanilla_attention/split/split_dim"
  input: "decoder/num_blocks_4/vanilla_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/split"
  input: "decoder/num_blocks_4/vanilla_attention/split:1"
  input: "decoder/num_blocks_4/vanilla_attention/split:2"
  input: "decoder/num_blocks_4/vanilla_attention/split:3"
  input: "decoder/num_blocks_4/vanilla_attention/split:4"
  input: "decoder/num_blocks_4/vanilla_attention/split:5"
  input: "decoder/num_blocks_4/vanilla_attention/split:6"
  input: "decoder/num_blocks_4/vanilla_attention/split:7"
  input: "decoder/num_blocks_4/vanilla_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_4/vanilla_attention/split_1/split_dim"
  input: "decoder/num_blocks_4/vanilla_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/split_1"
  input: "decoder/num_blocks_4/vanilla_attention/split_1:1"
  input: "decoder/num_blocks_4/vanilla_attention/split_1:2"
  input: "decoder/num_blocks_4/vanilla_attention/split_1:3"
  input: "decoder/num_blocks_4/vanilla_attention/split_1:4"
  input: "decoder/num_blocks_4/vanilla_attention/split_1:5"
  input: "decoder/num_blocks_4/vanilla_attention/split_1:6"
  input: "decoder/num_blocks_4/vanilla_attention/split_1:7"
  input: "decoder/num_blocks_4/vanilla_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_4/vanilla_attention/split_2/split_dim"
  input: "decoder/num_blocks_4/vanilla_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/split_2"
  input: "decoder/num_blocks_4/vanilla_attention/split_2:1"
  input: "decoder/num_blocks_4/vanilla_attention/split_2:2"
  input: "decoder/num_blocks_4/vanilla_attention/split_2:3"
  input: "decoder/num_blocks_4/vanilla_attention/split_2:4"
  input: "decoder/num_blocks_4/vanilla_attention/split_2:5"
  input: "decoder/num_blocks_4/vanilla_attention/split_2:6"
  input: "decoder/num_blocks_4/vanilla_attention/split_2:7"
  input: "decoder/num_blocks_4/vanilla_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_4/vanilla_attention/concat_1"
  input: "decoder/num_blocks_4/vanilla_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_4/vanilla_attention/concat"
  input: "decoder/num_blocks_4/vanilla_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_4/vanilla_attention/MatMul"
  input: "decoder/num_blocks_4/vanilla_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_4/vanilla_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_4/vanilla_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_4/vanilla_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_4/vanilla_attention/Sign"
  input: "decoder/num_blocks_4/vanilla_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_4/vanilla_attention/Tile"
  input: "decoder/num_blocks_4/vanilla_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_4/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_4/vanilla_attention/Shape"
  input: "decoder/num_blocks_4/vanilla_attention/strided_slice/stack"
  input: "decoder/num_blocks_4/vanilla_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_4/vanilla_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_4/vanilla_attention/strided_slice"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_4/vanilla_attention/ExpandDims"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_4/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_4/vanilla_attention/ones_like/Shape"
  input: "decoder/num_blocks_4/vanilla_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/ones_like"
  input: "decoder/num_blocks_4/vanilla_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_1"
  input: "decoder/num_blocks_4/vanilla_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_4/vanilla_attention/Equal"
  input: "decoder/num_blocks_4/vanilla_attention/mul"
  input: "decoder/num_blocks_4/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_4/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_4/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_4/vanilla_attention/Rank"
  input: "decoder/num_blocks_4/vanilla_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_4/vanilla_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_4/vanilla_attention/Shape_2"
  input: "decoder/num_blocks_4/vanilla_attention/Slice/begin"
  input: "decoder/num_blocks_4/vanilla_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/concat_3/values_0"
  input: "decoder/num_blocks_4/vanilla_attention/Slice"
  input: "decoder/num_blocks_4/vanilla_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/Select"
  input: "decoder/num_blocks_4/vanilla_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_4/vanilla_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_4/vanilla_attention/Softmax"
  input: "decoder/num_blocks_4/vanilla_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_4/self_attention/ln/add_1"
  input: "decoder/num_blocks_4/vanilla_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_4/vanilla_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_4/vanilla_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_4/vanilla_attention/Sign_1"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_2"
  input: "decoder/num_blocks_4/vanilla_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_4/vanilla_attention/Shape_3"
  input: "decoder/num_blocks_4/vanilla_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_4/vanilla_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_4/vanilla_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_3/multiples"
  op: "Pack"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_3/multiples/0"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_3/multiples/1"
  input: "decoder/num_blocks_4/vanilla_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_4/vanilla_attention/ExpandDims_1"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/Reshape_1"
  input: "decoder/num_blocks_4/vanilla_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_4/vanilla_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_4/vanilla_attention/dropout/Identity"
  input: "decoder/num_blocks_4/vanilla_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_4/vanilla_attention/split_3/split_dim"
  input: "decoder/num_blocks_4/vanilla_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_4/vanilla_attention/split_3"
  input: "decoder/num_blocks_4/vanilla_attention/split_3:1"
  input: "decoder/num_blocks_4/vanilla_attention/split_3:2"
  input: "decoder/num_blocks_4/vanilla_attention/split_3:3"
  input: "decoder/num_blocks_4/vanilla_attention/split_3:4"
  input: "decoder/num_blocks_4/vanilla_attention/split_3:5"
  input: "decoder/num_blocks_4/vanilla_attention/split_3:6"
  input: "decoder/num_blocks_4/vanilla_attention/split_3:7"
  input: "decoder/num_blocks_4/vanilla_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/add"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/concat_4"
  input: "decoder/num_blocks_4/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_4/vanilla_attention/add"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_4/vanilla_attention/add"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/Sub"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_4/vanilla_attention/add"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/vanilla_attention/ln/Variable"
  input: "decoder/num_blocks_4/vanilla_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_4/vanilla_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/vanilla_attention/ln/Variable_1"
  input: "decoder/num_blocks_4/vanilla_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_4/vanilla_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/vanilla_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/vanilla_attention/add"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/ln/moments/variance"
  input: "decoder/num_blocks_4/vanilla_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_4/vanilla_attention/ln/add"
  input: "decoder/num_blocks_4/vanilla_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_4/vanilla_attention/ln/sub"
  input: "decoder/num_blocks_4/vanilla_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/vanilla_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_4/vanilla_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/vanilla_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_4/vanilla_attention/ln/mul"
  input: "decoder/num_blocks_4/vanilla_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/bias"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_4/vanilla_attention/ln/add_1"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/kernel/read"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/ExpandDims"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/convolution/Squeeze"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d/Relu"
  op: "Relu"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/bias"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_4/multihead_attention/conv1d/Relu"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/kernel/read"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/ExpandDims"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_2/convolution/Squeeze"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/add"
  op: "Add"
  input: "decoder/num_blocks_4/multihead_attention/conv1d_2/BiasAdd"
  input: "decoder/num_blocks_4/vanilla_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_4/multihead_attention/add"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_4/multihead_attention/add"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/Sub"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_4/multihead_attention/add"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/multihead_attention/ln/Variable"
  input: "decoder/num_blocks_4/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_4/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_4/multihead_attention/ln/Variable_1"
  input: "decoder/num_blocks_4/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_4/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_4/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_4/multihead_attention/add"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_4/multihead_attention/ln/moments/variance"
  input: "decoder/num_blocks_4/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_4/multihead_attention/ln/add"
  input: "decoder/num_blocks_4/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_4/multihead_attention/ln/sub"
  input: "decoder/num_blocks_4/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_4/multihead_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_4/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_4/multihead_attention/ln/mul"
  input: "decoder/num_blocks_4/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/self_attention/dense/kernel"
  input: "decoder/num_blocks_5/self_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_5/self_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/self_attention/dense/bias"
  input: "decoder/num_blocks_5/self_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_5/self_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_5/self_attention/dense/kernel/read"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_5/self_attention/dense/Tensordot"
  input: "decoder/num_blocks_5/self_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_5/self_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/self_attention/dense_1/bias"
  input: "decoder/num_blocks_5/self_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_5/self_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_5/self_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_5/self_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_5/self_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_5/self_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/self_attention/dense_2/bias"
  input: "decoder/num_blocks_5/self_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_5/self_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_5/self_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_5/self_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_5/self_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_5/self_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/split"
  op: "Split"
  input: "decoder/num_blocks_5/self_attention/split/split_dim"
  input: "decoder/num_blocks_5/self_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/split"
  input: "decoder/num_blocks_5/self_attention/split:1"
  input: "decoder/num_blocks_5/self_attention/split:2"
  input: "decoder/num_blocks_5/self_attention/split:3"
  input: "decoder/num_blocks_5/self_attention/split:4"
  input: "decoder/num_blocks_5/self_attention/split:5"
  input: "decoder/num_blocks_5/self_attention/split:6"
  input: "decoder/num_blocks_5/self_attention/split:7"
  input: "decoder/num_blocks_5/self_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_5/self_attention/split_1/split_dim"
  input: "decoder/num_blocks_5/self_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/split_1"
  input: "decoder/num_blocks_5/self_attention/split_1:1"
  input: "decoder/num_blocks_5/self_attention/split_1:2"
  input: "decoder/num_blocks_5/self_attention/split_1:3"
  input: "decoder/num_blocks_5/self_attention/split_1:4"
  input: "decoder/num_blocks_5/self_attention/split_1:5"
  input: "decoder/num_blocks_5/self_attention/split_1:6"
  input: "decoder/num_blocks_5/self_attention/split_1:7"
  input: "decoder/num_blocks_5/self_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_5/self_attention/split_2/split_dim"
  input: "decoder/num_blocks_5/self_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/split_2"
  input: "decoder/num_blocks_5/self_attention/split_2:1"
  input: "decoder/num_blocks_5/self_attention/split_2:2"
  input: "decoder/num_blocks_5/self_attention/split_2:3"
  input: "decoder/num_blocks_5/self_attention/split_2:4"
  input: "decoder/num_blocks_5/self_attention/split_2:5"
  input: "decoder/num_blocks_5/self_attention/split_2:6"
  input: "decoder/num_blocks_5/self_attention/split_2:7"
  input: "decoder/num_blocks_5/self_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_5/self_attention/concat_1"
  input: "decoder/num_blocks_5/self_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_5/self_attention/concat"
  input: "decoder/num_blocks_5/self_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_5/self_attention/MatMul"
  input: "decoder/num_blocks_5/self_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Sum"
  op: "Sum"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_5/self_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_5/self_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_5/self_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_5/self_attention/Sign"
  input: "decoder/num_blocks_5/self_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_5/self_attention/Tile"
  input: "decoder/num_blocks_5/self_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_5/self_attention/Shape"
  input: "decoder/num_blocks_5/self_attention/strided_slice/stack"
  input: "decoder/num_blocks_5/self_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_5/self_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_5/self_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_5/self_attention/strided_slice"
  input: "decoder/num_blocks_5/self_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_5/self_attention/ExpandDims"
  input: "decoder/num_blocks_5/self_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_5/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_5/self_attention/ones_like/Shape"
  input: "decoder/num_blocks_5/self_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/ones_like"
  input: "decoder/num_blocks_5/self_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_5/self_attention/Tile_1"
  input: "decoder/num_blocks_5/self_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_5/self_attention/Equal"
  input: "decoder/num_blocks_5/self_attention/mul"
  input: "decoder/num_blocks_5/self_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_5/self_attention/Select"
  input: "decoder/num_blocks_5/self_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_5/self_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_5/self_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 6
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ones_like_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "#\000\000\000#\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ones_like_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ones_like_1"
  op: "Fill"
  input: "decoder/num_blocks_5/self_attention/ones_like_1/Shape"
  input: "decoder/num_blocks_5/self_attention/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/LinearOperatorTriL/MatrixBandPart"
  op: "MatrixBandPart"
  input: "decoder/num_blocks_5/self_attention/ones_like_1"
  input: "decoder/num_blocks_5/self_attention/LinearOperatorTriL/MatrixBandPart/num_lower"
  input: "decoder/num_blocks_5/self_attention/LinearOperatorTriL/MatrixBandPart/num_upper"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/LinearOperatorTriL/MatrixDiagPart"
  op: "MatrixDiagPart"
  input: "decoder/num_blocks_5/self_attention/LinearOperatorTriL/MatrixBandPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_5/self_attention/LinearOperatorTriL/MatrixBandPart"
  input: "decoder/num_blocks_5/self_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_5/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_2"
  op: "StridedSlice"
  input: "decoder/num_blocks_5/self_attention/Shape_1"
  input: "decoder/num_blocks_5/self_attention/strided_slice_2/stack"
  input: "decoder/num_blocks_5/self_attention/strided_slice_2/stack_1"
  input: "decoder/num_blocks_5/self_attention/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_2/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_2/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_2/multiples"
  op: "Pack"
  input: "decoder/num_blocks_5/self_attention/strided_slice_2"
  input: "decoder/num_blocks_5/self_attention/Tile_2/multiples/1"
  input: "decoder/num_blocks_5/self_attention/Tile_2/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_5/self_attention/ExpandDims_1"
  input: "decoder/num_blocks_5/self_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ones_like_2/Shape"
  op: "Shape"
  input: "decoder/num_blocks_5/self_attention/Tile_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ones_like_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ones_like_2"
  op: "Fill"
  input: "decoder/num_blocks_5/self_attention/ones_like_2/Shape"
  input: "decoder/num_blocks_5/self_attention/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/ones_like_2"
  input: "decoder/num_blocks_5/self_attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Equal_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Equal_1"
  op: "Equal"
  input: "decoder/num_blocks_5/self_attention/Tile_2"
  input: "decoder/num_blocks_5/self_attention/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Select_1"
  op: "Select"
  input: "decoder/num_blocks_5/self_attention/Equal_1"
  input: "decoder/num_blocks_5/self_attention/mul_1"
  input: "decoder/num_blocks_5/self_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_5/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Shape_3"
  op: "Shape"
  input: "decoder/num_blocks_5/self_attention/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_5/self_attention/Rank"
  input: "decoder/num_blocks_5/self_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_5/self_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_5/self_attention/Shape_3"
  input: "decoder/num_blocks_5/self_attention/Slice/begin"
  input: "decoder/num_blocks_5/self_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/concat_3/values_0"
  input: "decoder/num_blocks_5/self_attention/Slice"
  input: "decoder/num_blocks_5/self_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/Select_1"
  input: "decoder/num_blocks_5/self_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_5/self_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_5/self_attention/Softmax"
  input: "decoder/num_blocks_5/self_attention/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  input: "decoder/num_blocks_5/self_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_5/self_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_5/self_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_3/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_5/self_attention/Sign_1"
  input: "decoder/num_blocks_5/self_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ExpandDims_2"
  op: "ExpandDims"
  input: "decoder/num_blocks_5/self_attention/Tile_3"
  input: "decoder/num_blocks_5/self_attention/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Shape_4"
  op: "Shape"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/strided_slice_3"
  op: "StridedSlice"
  input: "decoder/num_blocks_5/self_attention/Shape_4"
  input: "decoder/num_blocks_5/self_attention/strided_slice_3/stack"
  input: "decoder/num_blocks_5/self_attention/strided_slice_3/stack_1"
  input: "decoder/num_blocks_5/self_attention/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_4/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_4/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_4/multiples"
  op: "Pack"
  input: "decoder/num_blocks_5/self_attention/Tile_4/multiples/0"
  input: "decoder/num_blocks_5/self_attention/Tile_4/multiples/1"
  input: "decoder/num_blocks_5/self_attention/strided_slice_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Tile_4"
  op: "Tile"
  input: "decoder/num_blocks_5/self_attention/ExpandDims_2"
  input: "decoder/num_blocks_5/self_attention/Tile_4/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/mul_2"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/Reshape_1"
  input: "decoder/num_blocks_5/self_attention/Tile_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_5/self_attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_5/self_attention/dropout/Identity"
  input: "decoder/num_blocks_5/self_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_5/self_attention/split_3/split_dim"
  input: "decoder/num_blocks_5/self_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/self_attention/split_3"
  input: "decoder/num_blocks_5/self_attention/split_3:1"
  input: "decoder/num_blocks_5/self_attention/split_3:2"
  input: "decoder/num_blocks_5/self_attention/split_3:3"
  input: "decoder/num_blocks_5/self_attention/split_3:4"
  input: "decoder/num_blocks_5/self_attention/split_3:5"
  input: "decoder/num_blocks_5/self_attention/split_3:6"
  input: "decoder/num_blocks_5/self_attention/split_3:7"
  input: "decoder/num_blocks_5/self_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/add"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/concat_4"
  input: "decoder/num_blocks_4/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_5/self_attention/add"
  input: "decoder/num_blocks_5/self_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_5/self_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_5/self_attention/add"
  input: "decoder/num_blocks_5/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_5/self_attention/ln/moments/Sub"
  input: "decoder/num_blocks_5/self_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_5/self_attention/add"
  input: "decoder/num_blocks_5/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_5/self_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_5/self_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_5/self_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_5/self_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_5/self_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_5/self_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/self_attention/ln/Variable"
  input: "decoder/num_blocks_5/self_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_5/self_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/self_attention/ln/Variable_1"
  input: "decoder/num_blocks_5/self_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_5/self_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/self_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/self_attention/add"
  input: "decoder/num_blocks_5/self_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/ln/moments/variance"
  input: "decoder/num_blocks_5/self_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_5/self_attention/ln/add"
  input: "decoder/num_blocks_5/self_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_5/self_attention/ln/sub"
  input: "decoder/num_blocks_5/self_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/self_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_5/self_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/self_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_5/self_attention/ln/mul"
  input: "decoder/num_blocks_5/self_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/vanilla_attention/dense/bias"
  input: "decoder/num_blocks_5/vanilla_attention/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_5/vanilla_attention/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_5/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Cast"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/axes"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Cast_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/range/start"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Rank"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/range"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Shape"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/ListDiff"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/add_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Prod"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_5/self_attention/ln/add_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/transpose"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_5/vanilla_attention/dense/kernel/read"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/transpose_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/Const_2"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/MatMul"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Tensordot"
  input: "decoder/num_blocks_5/vanilla_attention/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense/Relu"
  op: "Relu"
  input: "decoder/num_blocks_5/vanilla_attention/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/bias"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Cast"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/axes"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Cast_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/range/start"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Rank"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/range"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Shape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/ListDiff"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/add_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Prod"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/transpose"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/kernel/read"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/transpose_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/Const_2"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/MatMul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Tensordot"
  input: "decoder/num_blocks_5/vanilla_attention/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/Relu"
  op: "Relu"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/bias"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_2/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/dense_2/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Shape"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Cast"
  op: "Cast"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Cast"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Less"
  op: "Less"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Cast_1"
  op: "Cast"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/add"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/axes"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Cast_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/add_1"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/mul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/range"
  op: "Range"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/range/start"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Rank"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/ListDiff"
  op: "ListDiff"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/range"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Gather"
  op: "Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Gather_1"
  op: "Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Shape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Prod"
  op: "Prod"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Prod_1"
  op: "Prod"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Gather_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/ListDiff"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/add_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/stack"
  op: "Pack"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Prod"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/transpose"
  op: "Transpose"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/transpose"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/transpose_1"
  op: "Transpose"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/kernel/read"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/transpose_1"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/MatMul"
  op: "MatMul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Gather"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/Const_2"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/MatMul"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Tensordot"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dense_3/Relu"
  op: "Relu"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/split"
  op: "Split"
  input: "decoder/num_blocks_5/vanilla_attention/split/split_dim"
  input: "decoder/num_blocks_5/vanilla_attention/dense/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/split"
  input: "decoder/num_blocks_5/vanilla_attention/split:1"
  input: "decoder/num_blocks_5/vanilla_attention/split:2"
  input: "decoder/num_blocks_5/vanilla_attention/split:3"
  input: "decoder/num_blocks_5/vanilla_attention/split:4"
  input: "decoder/num_blocks_5/vanilla_attention/split:5"
  input: "decoder/num_blocks_5/vanilla_attention/split:6"
  input: "decoder/num_blocks_5/vanilla_attention/split:7"
  input: "decoder/num_blocks_5/vanilla_attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/split_1"
  op: "Split"
  input: "decoder/num_blocks_5/vanilla_attention/split_1/split_dim"
  input: "decoder/num_blocks_5/vanilla_attention/dense_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat_1"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/split_1"
  input: "decoder/num_blocks_5/vanilla_attention/split_1:1"
  input: "decoder/num_blocks_5/vanilla_attention/split_1:2"
  input: "decoder/num_blocks_5/vanilla_attention/split_1:3"
  input: "decoder/num_blocks_5/vanilla_attention/split_1:4"
  input: "decoder/num_blocks_5/vanilla_attention/split_1:5"
  input: "decoder/num_blocks_5/vanilla_attention/split_1:6"
  input: "decoder/num_blocks_5/vanilla_attention/split_1:7"
  input: "decoder/num_blocks_5/vanilla_attention/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/split_2"
  op: "Split"
  input: "decoder/num_blocks_5/vanilla_attention/split_2/split_dim"
  input: "decoder/num_blocks_5/vanilla_attention/dense_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat_2"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/split_2"
  input: "decoder/num_blocks_5/vanilla_attention/split_2:1"
  input: "decoder/num_blocks_5/vanilla_attention/split_2:2"
  input: "decoder/num_blocks_5/vanilla_attention/split_2:3"
  input: "decoder/num_blocks_5/vanilla_attention/split_2:4"
  input: "decoder/num_blocks_5/vanilla_attention/split_2:5"
  input: "decoder/num_blocks_5/vanilla_attention/split_2:6"
  input: "decoder/num_blocks_5/vanilla_attention/split_2:7"
  input: "decoder/num_blocks_5/vanilla_attention/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_5/vanilla_attention/concat_1"
  input: "decoder/num_blocks_5/vanilla_attention/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/MatMul"
  op: "BatchMatMul"
  input: "decoder/num_blocks_5/vanilla_attention/concat"
  input: "decoder/num_blocks_5/vanilla_attention/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_5/vanilla_attention/MatMul"
  input: "decoder/num_blocks_5/vanilla_attention/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Sum"
  op: "Sum"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  input: "decoder/num_blocks_5/vanilla_attention/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Abs"
  op: "Abs"
  input: "decoder/num_blocks_5/vanilla_attention/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Sign"
  op: "Sign"
  input: "decoder/num_blocks_5/vanilla_attention/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile"
  op: "Tile"
  input: "decoder/num_blocks_5/vanilla_attention/Sign"
  input: "decoder/num_blocks_5/vanilla_attention/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_5/vanilla_attention/Tile"
  input: "decoder/num_blocks_5/vanilla_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Shape"
  op: "Shape"
  input: "decoder/num_blocks_5/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/strided_slice"
  op: "StridedSlice"
  input: "decoder/num_blocks_5/vanilla_attention/Shape"
  input: "decoder/num_blocks_5/vanilla_attention/strided_slice/stack"
  input: "decoder/num_blocks_5/vanilla_attention/strided_slice/stack_1"
  input: "decoder/num_blocks_5/vanilla_attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_1/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_1/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_1/multiples"
  op: "Pack"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_1/multiples/0"
  input: "decoder/num_blocks_5/vanilla_attention/strided_slice"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_1/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_1"
  op: "Tile"
  input: "decoder/num_blocks_5/vanilla_attention/ExpandDims"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ones_like/Shape"
  op: "Shape"
  input: "decoder/num_blocks_5/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ones_like"
  op: "Fill"
  input: "decoder/num_blocks_5/vanilla_attention/ones_like/Shape"
  input: "decoder/num_blocks_5/vanilla_attention/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4294967296.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/ones_like"
  input: "decoder/num_blocks_5/vanilla_attention/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Equal/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Equal"
  op: "Equal"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_1"
  input: "decoder/num_blocks_5/vanilla_attention/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Select"
  op: "Select"
  input: "decoder/num_blocks_5/vanilla_attention/Equal"
  input: "decoder/num_blocks_5/vanilla_attention/mul"
  input: "decoder/num_blocks_5/vanilla_attention/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Shape_1"
  op: "Shape"
  input: "decoder/num_blocks_5/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Shape_2"
  op: "Shape"
  input: "decoder/num_blocks_5/vanilla_attention/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Sub"
  op: "Sub"
  input: "decoder/num_blocks_5/vanilla_attention/Rank"
  input: "decoder/num_blocks_5/vanilla_attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Slice/begin"
  op: "Pack"
  input: "decoder/num_blocks_5/vanilla_attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Slice"
  op: "Slice"
  input: "decoder/num_blocks_5/vanilla_attention/Shape_2"
  input: "decoder/num_blocks_5/vanilla_attention/Slice/begin"
  input: "decoder/num_blocks_5/vanilla_attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat_3/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat_3"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/concat_3/values_0"
  input: "decoder/num_blocks_5/vanilla_attention/Slice"
  input: "decoder/num_blocks_5/vanilla_attention/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Reshape"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/Select"
  input: "decoder/num_blocks_5/vanilla_attention/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Softmax"
  op: "Softmax"
  input: "decoder/num_blocks_5/vanilla_attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Reshape_1"
  op: "Reshape"
  input: "decoder/num_blocks_5/vanilla_attention/Softmax"
  input: "decoder/num_blocks_5/vanilla_attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Sum_1"
  op: "Sum"
  input: "decoder/num_blocks_5/self_attention/ln/add_1"
  input: "decoder/num_blocks_5/vanilla_attention/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Abs_1"
  op: "Abs"
  input: "decoder/num_blocks_5/vanilla_attention/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Sign_1"
  op: "Sign"
  input: "decoder/num_blocks_5/vanilla_attention/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_2"
  op: "Tile"
  input: "decoder/num_blocks_5/vanilla_attention/Sign_1"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_2"
  input: "decoder/num_blocks_5/vanilla_attention/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Shape_3"
  op: "Shape"
  input: "encoder/num_blocks_5/multihead_attention_1/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/strided_slice_1"
  op: "StridedSlice"
  input: "decoder/num_blocks_5/vanilla_attention/Shape_3"
  input: "decoder/num_blocks_5/vanilla_attention/strided_slice_1/stack"
  input: "decoder/num_blocks_5/vanilla_attention/strided_slice_1/stack_1"
  input: "decoder/num_blocks_5/vanilla_attention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_3/multiples/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_3/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_3/multiples"
  op: "Pack"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_3/multiples/0"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_3/multiples/1"
  input: "decoder/num_blocks_5/vanilla_attention/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Tile_3"
  op: "Tile"
  input: "decoder/num_blocks_5/vanilla_attention/ExpandDims_1"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/mul_1"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/Reshape_1"
  input: "decoder/num_blocks_5/vanilla_attention/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/dropout/Identity"
  op: "Identity"
  input: "decoder/num_blocks_5/vanilla_attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/MatMul_1"
  op: "BatchMatMul"
  input: "decoder/num_blocks_5/vanilla_attention/dropout/Identity"
  input: "decoder/num_blocks_5/vanilla_attention/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/split_3/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/split_3"
  op: "Split"
  input: "decoder/num_blocks_5/vanilla_attention/split_3/split_dim"
  input: "decoder/num_blocks_5/vanilla_attention/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/concat_4"
  op: "ConcatV2"
  input: "decoder/num_blocks_5/vanilla_attention/split_3"
  input: "decoder/num_blocks_5/vanilla_attention/split_3:1"
  input: "decoder/num_blocks_5/vanilla_attention/split_3:2"
  input: "decoder/num_blocks_5/vanilla_attention/split_3:3"
  input: "decoder/num_blocks_5/vanilla_attention/split_3:4"
  input: "decoder/num_blocks_5/vanilla_attention/split_3:5"
  input: "decoder/num_blocks_5/vanilla_attention/split_3:6"
  input: "decoder/num_blocks_5/vanilla_attention/split_3:7"
  input: "decoder/num_blocks_5/vanilla_attention/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/add"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/concat_4"
  input: "decoder/num_blocks_5/self_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_5/vanilla_attention/add"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_5/vanilla_attention/add"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/Sub"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_5/vanilla_attention/add"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/vanilla_attention/ln/Variable"
  input: "decoder/num_blocks_5/vanilla_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_5/vanilla_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/vanilla_attention/ln/Variable_1"
  input: "decoder/num_blocks_5/vanilla_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_5/vanilla_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/vanilla_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/vanilla_attention/add"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/ln/moments/variance"
  input: "decoder/num_blocks_5/vanilla_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_5/vanilla_attention/ln/add"
  input: "decoder/num_blocks_5/vanilla_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_5/vanilla_attention/ln/sub"
  input: "decoder/num_blocks_5/vanilla_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/vanilla_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_5/vanilla_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/vanilla_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_5/vanilla_attention/ln/mul"
  input: "decoder/num_blocks_5/vanilla_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/bias"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_5/vanilla_attention/ln/add_1"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/kernel/read"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/ExpandDims"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/convolution/Squeeze"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d/Relu"
  op: "Relu"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04841229319572449
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/max"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/mul"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/read"
  op: "Identity"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/kernel"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/bias/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/bias"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_1/bias/read"
  op: "Identity"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/conv1d_1/bias"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/ExpandDims"
  op: "ExpandDims"
  input: "decoder/num_blocks_5/multihead_attention/conv1d/Relu"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/kernel/read"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/Conv2D"
  op: "Conv2D"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/ExpandDims"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/Squeeze"
  op: "Squeeze"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/conv1d_2/BiasAdd"
  op: "BiasAdd"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_2/convolution/Squeeze"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/add"
  op: "Add"
  input: "decoder/num_blocks_5/multihead_attention/conv1d_2/BiasAdd"
  input: "decoder/num_blocks_5/vanilla_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/Mean"
  op: "Mean"
  input: "decoder/num_blocks_5/multihead_attention/add"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/StopGradient"
  op: "StopGradient"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/Sub"
  op: "Sub"
  input: "decoder/num_blocks_5/multihead_attention/add"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean"
  op: "Mean"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/Sub"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoder/num_blocks_5/multihead_attention/add"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/Mean_1"
  op: "Mean"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/SquaredDifference"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/Square"
  op: "Square"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/variance"
  op: "Sub"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/Mean_1"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/moments/mean"
  op: "Add"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/shifted_mean"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/Variable/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/multihead_attention/ln/Variable"
  input: "decoder/num_blocks_5/multihead_attention/ln/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/ln/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/Variable/read"
  op: "Identity"
  input: "decoder/num_blocks_5/multihead_attention/ln/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/ln/Variable"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/Variable_1/Assign"
  op: "Assign"
  input: "decoder/num_blocks_5/multihead_attention/ln/Variable_1"
  input: "decoder/num_blocks_5/multihead_attention/ln/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/ln/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/Variable_1/read"
  op: "Identity"
  input: "decoder/num_blocks_5/multihead_attention/ln/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoder/num_blocks_5/multihead_attention/ln/Variable_1"
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/sub"
  op: "Sub"
  input: "decoder/num_blocks_5/multihead_attention/add"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/add"
  op: "Add"
  input: "decoder/num_blocks_5/multihead_attention/ln/moments/variance"
  input: "decoder/num_blocks_5/multihead_attention/ln/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/pow"
  op: "Pow"
  input: "decoder/num_blocks_5/multihead_attention/ln/add"
  input: "decoder/num_blocks_5/multihead_attention/ln/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/truediv"
  op: "RealDiv"
  input: "decoder/num_blocks_5/multihead_attention/ln/sub"
  input: "decoder/num_blocks_5/multihead_attention/ln/pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/mul"
  op: "Mul"
  input: "decoder/num_blocks_5/multihead_attention/ln/Variable_1/read"
  input: "decoder/num_blocks_5/multihead_attention/ln/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "decoder/num_blocks_5/multihead_attention/ln/add_1"
  op: "Add"
  input: "decoder/num_blocks_5/multihead_attention/ln/mul"
  input: "decoder/num_blocks_5/multihead_attention/ln/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1053117886185646
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1053117886185646
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "Assign"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/read"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 29
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/read"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "dense/Tensordot/Shape"
  op: "Shape"
  input: "decoder/num_blocks_5/multihead_attention/ln/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "dense/Tensordot/axes"
  input: "dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Cast"
  op: "Cast"
  input: "dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dense/Tensordot/mul"
  op: "Mul"
  input: "dense/Tensordot/Cast"
  input: "dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/Less"
  op: "Less"
  input: "dense/Tensordot/axes"
  input: "dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Cast_1"
  op: "Cast"
  input: "dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dense/Tensordot/add"
  op: "Add"
  input: "dense/Tensordot/axes"
  input: "dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/mul_1"
  op: "Mul"
  input: "dense/Tensordot/Cast_1"
  input: "dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/add_1"
  op: "Add"
  input: "dense/Tensordot/mul"
  input: "dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense/Tensordot/range"
  op: "Range"
  input: "dense/Tensordot/range/start"
  input: "dense/Tensordot/Rank"
  input: "dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "dense/Tensordot/range"
  input: "dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Gather"
  op: "Gather"
  input: "dense/Tensordot/Shape"
  input: "dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dense/Tensordot/Gather_1"
  op: "Gather"
  input: "dense/Tensordot/Shape"
  input: "dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/Prod"
  op: "Prod"
  input: "dense/Tensordot/Gather"
  input: "dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/Prod_1"
  op: "Prod"
  input: "dense/Tensordot/Gather_1"
  input: "dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat"
  op: "ConcatV2"
  input: "dense/Tensordot/Gather_1"
  input: "dense/Tensordot/Gather"
  input: "dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "dense/Tensordot/ListDiff"
  input: "dense/Tensordot/add_1"
  input: "dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/stack"
  op: "Pack"
  input: "dense/Tensordot/Prod"
  input: "dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/Tensordot/transpose"
  op: "Transpose"
  input: "decoder/num_blocks_5/multihead_attention/ln/add_1"
  input: "dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Reshape"
  op: "Reshape"
  input: "dense/Tensordot/transpose"
  input: "dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "dense/kernel/read"
  input: "dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "dense/Tensordot/transpose_1"
  input: "dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/MatMul"
  op: "MatMul"
  input: "dense/Tensordot/Reshape"
  input: "dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "dense/Tensordot/Gather"
  input: "dense/Tensordot/Const_2"
  input: "dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot"
  op: "Reshape"
  input: "dense/Tensordot/MatMul"
  input: "dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/Tensordot"
  input: "dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "dense/BiasAdd"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ToInt32"
  op: "Cast"
  input: "ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "NotEqual"
  op: "NotEqual"
  input: "Placeholder_1"
  input: "NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ToFloat"
  op: "Cast"
  input: "NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ToInt32"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ToFloat_1"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "ToFloat_1"
  input: "ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "mul_1"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "ToFloat"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "Sum"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "acc/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "acc"
      }
    }
  }
}
node {
  name: "acc"
  op: "ScalarSummary"
  input: "acc/tags"
  input: "truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 22
}
